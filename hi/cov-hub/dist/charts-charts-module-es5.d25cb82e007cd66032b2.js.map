{"version":3,"sources":["webpack:///src/app/pages/charts/chartjs/chartjs-radar.component.ts","webpack:///src/app/pages/charts/chartjs/chartjs-bar-horizontal.component.ts","webpack:///src/app/pages/charts/chartjs/chartjs-multiple-xaxis.component.ts","webpack:///src/app/pages/charts/chartjs/chartjs-line.component.ts","webpack:///src/app/pages/charts/chartjs/chartjs-bar.component.ts","webpack:///src/app/pages/charts/chartjs/chartjs-pie.component.ts","webpack:///src/app/pages/charts/d3/d3.component.ts","webpack:///src/app/pages/charts/d3/d3-area-stack.component.ts","webpack:///src/app/pages/charts/d3/d3-advanced-pie.component.ts","webpack:///src/app/pages/charts/d3/d3-line.component.ts","webpack:///src/app/pages/charts/d3/d3-bar.component.ts","webpack:///src/app/pages/charts/d3/d3-pie.component.ts","webpack:///src/app/pages/charts/echarts/echarts.component.ts","webpack:///src/app/pages/charts/echarts/echarts-radar.component.ts","webpack:///src/app/pages/charts/echarts/echarts-bar-animation.component.ts","webpack:///src/app/pages/charts/echarts/echarts-area-stack.component.ts","webpack:///src/app/pages/charts/echarts/echarts-multiple-xaxis.component.ts","webpack:///src/app/pages/charts/echarts/echarts-line.component.ts","webpack:///src/app/pages/charts/echarts/echarts-bar.component.ts","webpack:///src/app/pages/charts/echarts/echarts-pie.component.ts","webpack:///src/app/pages/charts/charts.component.ts","webpack:///src/app/pages/charts/chartjs/chartjs.component.ts","webpack:///src/app/pages/charts/charts.module.ts","webpack:///src/app/pages/charts/charts-routing.module.ts","webpack:///src/app/pages/charts/echarts/echarts.component.html","webpack:///src/app/pages/charts/d3/d3.component.html","webpack:///src/app/pages/charts/chartjs/chartjs.component.html"],"names":["ChartjsRadarComponent","ChartjsBarHorizontalComponent","ChartjsMultipleXaxisComponent","ChartjsLineComponent","ChartjsBarComponent","ChartjsPieComponent","D3Component","D3AreaStackComponent","D3AdvancedPieComponent","D3LineComponent","D3BarComponent","D3PieComponent","EchartsComponent","EchartsRadarComponent","EchartsBarAnimationComponent","EchartsAreaStackComponent","EchartsMultipleXaxisComponent","EchartsLineComponent","EchartsBarComponent","EchartsPieComponent","ChartsComponent","ChartjsComponent","ChartsModule","ChartsRoutingModule","theme","options","this","themeSubscription","getJsTheme","subscribe","config","colors","variables","echarts","backgroundColor","bg","color","warningLight","infoLight","dangerLight","successLight","primaryLight","tooltip","trigger","formatter","legend","orient","left","data","textStyle","textColor","series","name","type","radius","center","value","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","itemHoverShadowColor","label","normal","labelLine","lineStyle","axisLineColor","unsubscribe","axisPointer","grid","right","bottom","containLabel","xAxis","axisTick","alignWithLabel","axisLine","axisLabel","yAxis","splitLine","splitLineColor","barWidth","danger","primary","info","success","top","onZero","params","seriesData","length","xAxisIndex","smooth","tooltipBackgroundColor","boundaryGap","stack","areaStyle","opacity","areaOpacity","show","position","xAxisData","data1","data2","align","silent","animationDelay","idx","animationEasing","animationDelayUpdate","Array","keys","forEach","_","i","push","Math","sin","cos","warning","radar","indicator","max","splitArea","results","showLegend","showLabels","colorScheme","domain","showXAxis","showYAxis","xAxisLabel","yAxisLabel","multi","showXAxisLabel","showYAxisLabel","single","autoScale","chartjs","labels","datasets","maintainAspectRatio","responsive","scales","xAxes","display","yAxes","fontColor","hexToRgbA","gridLines","ticks","borderColor","random","fill","borderDash","pointRadius","pointHoverRadius","hover","mode","scaleLabel","labelString","round","borderWidth","elements","rectangle","scaleFontColor","scale","pointLabels","fontSize","angleLines","routes","path","component","children","forChild","ChartModule"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService, NbColorHelper } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-chartjs-radar',\n  template: `\n    <chart type=\"radar\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class ChartjsRadarComponent implements OnDestroy {\n  options: any;\n  data: {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const chartjs: any = config?.variables?.chartjs;\n\n      this.data = {\n        labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n        datasets: [{\n          data: [65, 59, 90, 81, 56, 55, 40],\n          label: 'Series A',\n          borderColor: colors?.danger,\n          backgroundColor: NbColorHelper.hexToRgbA(colors?.dangerLight, 0.5),\n        }, {\n          data: [28, 48, 40, 19, 96, 27, 100],\n          label: 'Series B',\n          borderColor: colors?.warning,\n          backgroundColor: NbColorHelper.hexToRgbA(colors?.warningLight, 0.5),\n        }],\n      };\n\n      this.options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        scaleFontColor: 'white',\n        legend: {\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n        scale: {\n          pointLabels: {\n            fontSize: 14,\n            fontColor: chartjs.textColor,\n          },\n          gridLines: {\n            color: chartjs.axisLineColor,\n          },\n          angleLines: {\n            color: chartjs.axisLineColor,\n          },\n        },\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-chartjs-bar-horizontal',\n  template: `\n    <chart type=\"horizontalBar\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class ChartjsBarHorizontalComponent implements OnDestroy {\n  data: any;\n  options: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const chartjs: any = config?.variables?.chartjs;\n\n      this.data = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n        datasets: [{\n            label: 'Dataset 1',\n            backgroundColor: colors.infoLight,\n            borderWidth: 1,\n            data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n          }, {\n            label: 'Dataset 2',\n            backgroundColor: colors.successLight,\n            data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n          },\n        ],\n      };\n\n      this.options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        elements: {\n          rectangle: {\n            borderWidth: 2,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                display: false,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n        },\n        legend: {\n          position: 'right',\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n\n  private random() {\n    return Math.round(Math.random() * 100);\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-chartjs-multiple-xaxis',\n  template: `\n    <chart type=\"line\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class ChartjsMultipleXaxisComponent implements OnDestroy {\n  data: {};\n  options: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const chartjs: any = config?.variables?.chartjs;\n\n      this.data = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n        datasets: [{\n          label: 'dataset - big points',\n          data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n          borderColor: colors.primary,\n          backgroundColor: colors.primary,\n          fill: false,\n          borderDash: [5, 5],\n          pointRadius: 8,\n          pointHoverRadius: 10,\n        }, {\n          label: 'dataset - individual point sizes',\n          data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n          borderColor: colors.dangerLight,\n          backgroundColor: colors.dangerLight,\n          fill: false,\n          borderDash: [5, 5],\n          pointRadius: 8,\n          pointHoverRadius: 10,\n        }, {\n          label: 'dataset - large pointHoverRadius',\n          data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n          borderColor: colors.info,\n          backgroundColor: colors.info,\n          fill: false,\n          pointRadius: 8,\n          pointHoverRadius: 10,\n        }, {\n          label: 'dataset - large pointHitRadius',\n          data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n          borderColor: colors.success,\n          backgroundColor: colors.success,\n          fill: false,\n          pointRadius: 8,\n          pointHoverRadius: 10,\n        }],\n      };\n\n      this.options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          position: 'bottom',\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n        hover: {\n          mode: 'index',\n        },\n        scales: {\n          xAxes: [\n            {\n              display: true,\n              scaleLabel: {\n                display: true,\n                labelString: 'Month',\n              },\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              display: true,\n              scaleLabel: {\n                display: true,\n                labelString: 'Value',\n              },\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n        },\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n\n  private random() {\n    return Math.round(Math.random() * 100);\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService, NbColorHelper } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-chartjs-line',\n  template: `\n    <chart type=\"line\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class ChartjsLineComponent implements OnDestroy {\n  data: any;\n  options: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const chartjs: any = config?.variables?.chartjs;\n\n      this.data = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [{\n          data: [65, 59, 80, 81, 56, 55, 40],\n          label: 'Series A',\n          backgroundColor: NbColorHelper.hexToRgbA(colors.primary, 0.3),\n          borderColor: colors.primary,\n        }, {\n          data: [28, 48, 40, 19, 86, 27, 90],\n          label: 'Series B',\n          backgroundColor: NbColorHelper.hexToRgbA(colors.danger, 0.3),\n          borderColor: colors.danger,\n        }, {\n          data: [18, 48, 77, 9, 100, 27, 40],\n          label: 'Series C',\n          backgroundColor: NbColorHelper.hexToRgbA(colors.info, 0.3),\n          borderColor: colors.info,\n        },\n        ],\n      };\n\n      this.options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n        },\n        legend: {\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService, NbColorHelper } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-chartjs-bar',\n  template: `\n    <chart type=\"bar\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class ChartjsBarComponent implements OnDestroy {\n  data: any;\n  options: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const chartjs: any = config?.variables?.chartjs;\n\n      this.data = {\n        labels: ['2006', '2007', '2008', '2009', '2010', '2011', '2012'],\n        datasets: [{\n          data: [65, 59, 80, 81, 56, 55, 40],\n          label: 'Series A',\n          backgroundColor: NbColorHelper.hexToRgbA(colors.primaryLight, 0.8),\n        }, {\n          data: [28, 48, 40, 19, 86, 27, 90],\n          label: 'Series B',\n          backgroundColor: NbColorHelper.hexToRgbA(colors.infoLight, 0.8),\n        }],\n      };\n\n      this.options = {\n        maintainAspectRatio: false,\n        responsive: true,\n        legend: {\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: false,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n        },\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-chartjs-pie',\n  template: `\n    <chart type=\"pie\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class ChartjsPieComponent implements OnDestroy {\n  data: any;\n  options: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const chartjs: any = config?.variables?.chartjs;\n\n      this.data = {\n        labels: ['Download Sales', 'In-Store Sales', 'Mail Sales'],\n        datasets: [{\n          data: [300, 500, 100],\n          backgroundColor: [colors?.primaryLight, colors?.infoLight, colors?.successLight],\n        }],\n      };\n\n      this.options = {\n        maintainAspectRatio: false,\n        responsive: true,\n        scales: {\n          xAxes: [\n            {\n              display: false,\n            },\n          ],\n          yAxes: [\n            {\n              display: false,\n            },\n          ],\n        },\n        legend: {\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-d3',\n  styleUrls: ['./d3.component.scss'],\n  templateUrl: './d3.component.html',\n})\nexport class D3Component {}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-d3-area-stack',\n  template: `\n    <ngx-charts-area-chart\n      [scheme]=\"colorScheme\"\n      [results]=\"multi\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [legend]=\"showLegend\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\"\n      [autoScale]=\"autoScale\">\n    </ngx-charts-area-chart>\n  `,\n})\nexport class D3AreaStackComponent implements OnDestroy {\n  multi = [{\n    name: 'Germany',\n    series: [{\n        name: '2010',\n        value: 7300000,\n      }, {\n        name: '2011',\n        value: 8940000,\n      }],\n  }, {\n    name: 'USA',\n    series: [{\n        name: '2010',\n        value: 7870000,\n      }, {\n        name: '2011',\n        value: 8270000,\n      }],\n  }, {\n    name: 'France',\n    series: [{\n        name: '2010',\n        value: 5000002,\n      }, {\n        name: '2011',\n        value: 5800000,\n      }],\n  }];\n  showLegend = true;\n  autoScale = true;\n  showXAxis = true;\n  showYAxis = true;\n  showXAxisLabel = true;\n  showYAxisLabel = true;\n  xAxisLabel = 'Country';\n  yAxisLabel = 'Population';\n  colorScheme: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n      const colors: any = config.variables;\n      this.colorScheme = {\n        domain: [colors.primaryLight, colors.infoLight, colors.successLight, colors.warningLight, colors.dangerLight],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-d3-advanced-pie',\n  template: `\n    <ngx-charts-advanced-pie-chart\n      [scheme]=\"colorScheme\"\n      [results]=\"single\">\n    </ngx-charts-advanced-pie-chart>\n  `,\n})\nexport class D3AdvancedPieComponent implements OnDestroy {\n  single = [\n    {\n      name: 'Germany',\n      value: 8940000,\n    },\n    {\n      name: 'USA',\n      value: 5000000,\n    },\n    {\n      name: 'France',\n      value: 7200000,\n    },\n  ];\n  colorScheme: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n      const colors: any = config.variables;\n      this.colorScheme = {\n        domain: [colors.primaryLight, colors.infoLight, colors.successLight, colors.warningLight, colors.dangerLight],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-d3-line',\n  template: `\n    <ngx-charts-line-chart\n      [scheme]=\"colorScheme\"\n      [results]=\"multi\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [legend]=\"showLegend\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\">\n    </ngx-charts-line-chart>\n  `,\n})\nexport class D3LineComponent implements OnDestroy {\n  multi = [\n    {\n      name: 'Germany',\n      series: [\n        {\n          name: '2010',\n          value: 7300,\n        },\n        {\n          name: '2011',\n          value: 8940,\n        },\n      ],\n    },\n    {\n      name: 'USA',\n      series: [\n        {\n          name: '2010',\n          value: 7870,\n        },\n        {\n          name: '2011',\n          value: 8270,\n        },\n      ],\n    },\n    {\n      name: 'France',\n      series: [\n        {\n          name: '2010',\n          value: 5002,\n        },\n        {\n          name: '2011',\n          value: 5800,\n        },\n      ],\n    },\n  ];\n  showLegend = true;\n  showXAxis = true;\n  showYAxis = true;\n  showXAxisLabel = true;\n  xAxisLabel = 'Country';\n  showYAxisLabel = true;\n  yAxisLabel = 'Population';\n  colorScheme: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n      const colors: any = config.variables;\n      this.colorScheme = {\n        domain: [colors.primaryLight, colors.infoLight, colors.successLight, colors.warningLight, colors.dangerLight],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-d3-bar',\n  template: `\n    <ngx-charts-bar-vertical\n      [scheme]=\"colorScheme\"\n      [results]=\"results\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [legend]=\"showLegend\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\">\n    </ngx-charts-bar-vertical>\n  `,\n})\nexport class D3BarComponent implements OnDestroy {\n\n  results = [\n    { name: 'Germany', value: 8940 },\n    { name: 'USA', value: 5000 },\n    { name: 'France', value: 7200 },\n  ];\n  showLegend = true;\n  showXAxis = true;\n  showYAxis = true;\n  xAxisLabel = 'Country';\n  yAxisLabel = 'Population';\n  colorScheme: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n      const colors: any = config.variables;\n      this.colorScheme = {\n        domain: [colors.primaryLight, colors.infoLight, colors.successLight, colors.warningLight, colors.dangerLight],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-d3-pie',\n  template: `\n    <ngx-charts-pie-chart\n      [scheme]=\"colorScheme\"\n      [results]=\"results\"\n      [legend]=\"showLegend\"\n      [labels]=\"showLabels\">\n    </ngx-charts-pie-chart>\n  `,\n})\nexport class D3PieComponent implements OnDestroy {\n  results = [\n    { name: 'Germany', value: 8940 },\n    { name: 'USA', value: 5000 },\n    { name: 'France', value: 7200 },\n  ];\n  showLegend = true;\n  showLabels = true;\n  colorScheme: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n      const colors: any = config.variables;\n      this.colorScheme = {\n        domain: [colors.primaryLight, colors.infoLight, colors.successLight, colors.warningLight, colors.dangerLight],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-echarts',\n  styleUrls: ['./echarts.component.scss'],\n  templateUrl: './echarts.component.html',\n})\nexport class EchartsComponent {}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-radar',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsRadarComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts.bg,\n        color: [colors.danger, colors.warning],\n        tooltip: {},\n        legend: {\n          data: ['Allocated Budget', 'Actual Spending'],\n          textStyle: {\n            color: echarts.textColor,\n          },\n        },\n        radar: {\n          name: {\n            textStyle: {\n              color: echarts.textColor,\n            },\n          },\n          indicator: [\n            { name: 'Sales', max: 6500 },\n            { name: 'Administration', max: 16000 },\n            { name: 'Information Techology', max: 30000 },\n            { name: 'Customer Support', max: 38000 },\n            { name: 'Development', max: 52000 },\n            { name: 'Marketing', max: 25000 },\n          ],\n          splitArea: {\n            areaStyle: {\n              color: 'transparent',\n            },\n          },\n        },\n        series: [\n          {\n            name: 'Budget vs Spending',\n            type: 'radar',\n            data: [\n              {\n                value: [4300, 10000, 28000, 35000, 50000, 19000],\n                name: 'Allocated Budget',\n              },\n              {\n                value: [5000, 14000, 28000, 31000, 42000, 21000],\n                name: 'Actual Spending',\n              },\n            ],\n          },\n        ],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-bar-animation',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsBarAnimationComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n      const xAxisData: string[] = [];\n      const data1: number[] = [];\n      const data2: number[] = [];\n\n      const colors: any = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts?.bg,\n        color: [colors?.primaryLight, colors?.infoLight],\n        legend: {\n          data: ['bar', 'bar2'],\n          align: 'left',\n          textStyle: {\n            color: echarts?.textColor,\n          },\n        },\n        xAxis: [\n          {\n            data: xAxisData,\n            silent: false,\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              lineStyle: {\n                color: echarts?.axisLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts?.textColor,\n              },\n            },\n          },\n        ],\n        yAxis: [\n          {\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            splitLine: {\n              lineStyle: {\n                color: echarts.splitLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        series: [\n          {\n            name: 'bar',\n            type: 'bar',\n            data: data1,\n            animationDelay: (idx: any) => idx * 10,\n          },\n          {\n            name: 'bar2',\n            type: 'bar',\n            data: data2,\n            animationDelay: (idx: any) => idx * 10 + 100,\n          },\n        ],\n        animationEasing: 'elasticOut',\n        animationDelayUpdate: (idx: any) => idx * 5,\n      };\n\n      [...Array(100).keys()].forEach((_, i) => {\n        xAxisData.push('Category ' + i);\n        data1.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\n        data2.push((Math.cos(i / 5) * (i / 5 - 10) + i / 6) * 5);\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-area-stack',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsAreaStackComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts.bg,\n        color: [colors.warningLight, colors.infoLight, colors.dangerLight, colors.successLight, colors.primaryLight],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: echarts.tooltipBackgroundColor,\n            },\n          },\n        },\n        legend: {\n          data: ['Mail marketing', 'Affiliate advertising', 'Video ad', 'Direct interview', 'Search engine'],\n          textStyle: {\n            color: echarts.textColor,\n          },\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true,\n        },\n        xAxis: [\n          {\n            type: 'category',\n            boundaryGap: false,\n            data: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            splitLine: {\n              lineStyle: {\n                color: echarts.splitLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        series: [\n          {\n            name: 'Mail marketing',\n            type: 'line',\n            stack: 'Total amount',\n            areaStyle: { normal: { opacity: echarts.areaOpacity } },\n            data: [120, 132, 101, 134, 90, 230, 210],\n          },\n          {\n            name: 'Affiliate advertising',\n            type: 'line',\n            stack: 'Total amount',\n            areaStyle: { normal: { opacity: echarts.areaOpacity } },\n            data: [220, 182, 191, 234, 290, 330, 310],\n          },\n          {\n            name: 'Video ad',\n            type: 'line',\n            stack: 'Total amount',\n            areaStyle: { normal: { opacity: echarts.areaOpacity } },\n            data: [150, 232, 201, 154, 190, 330, 410],\n          },\n          {\n            name: 'Direct interview',\n            type: 'line',\n            stack: 'Total amount',\n            areaStyle: { normal: { opacity: echarts.areaOpacity } },\n            data: [320, 332, 301, 334, 390, 330, 320],\n          },\n          {\n            name: 'Search engine',\n            type: 'line',\n            stack: 'Total amount',\n            label: {\n              normal: {\n                show: true,\n                position: 'top',\n                textStyle: {\n                  color: echarts.textColor,\n                },\n              },\n            },\n            areaStyle: { normal: { opacity: echarts.areaOpacity } },\n            data: [820, 932, 901, 934, 1290, 1330, 1320],\n          },\n        ],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, AfterViewInit, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-multiple-xaxis',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsMultipleXaxisComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts.bg,\n        color: [colors.success, colors.info],\n        tooltip: {\n          trigger: 'none',\n          axisPointer: {\n            type: 'cross',\n          },\n        },\n        legend: {\n          data: ['2015 Precipitation', '2016 Precipitation'],\n          textStyle: {\n            color: echarts.textColor,\n          },\n        },\n        grid: {\n          top: 70,\n          bottom: 50,\n        },\n        xAxis: [\n          {\n            type: 'category',\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              onZero: false,\n              lineStyle: {\n                color: colors.info,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n            axisPointer: {\n              label: {\n                formatter: (params: any) => {\n                  return (\n                    'Precipitation  ' + params.value + (params.seriesData.length ? '：' + params.seriesData[0].data : '')\n                  );\n                },\n              },\n            },\n            data: [\n              '2016-1',\n              '2016-2',\n              '2016-3',\n              '2016-4',\n              '2016-5',\n              '2016-6',\n              '2016-7',\n              '2016-8',\n              '2016-9',\n              '2016-10',\n              '2016-11',\n              '2016-12',\n            ],\n          },\n          {\n            type: 'category',\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              onZero: false,\n              lineStyle: {\n                color: colors.success,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n            axisPointer: {\n              label: {\n                formatter: (params: any) => {\n                  return (\n                    'Precipitation  ' + params.value + (params.seriesData.length ? '：' + params.seriesData[0].data : '')\n                  );\n                },\n              },\n            },\n            data: [\n              '2015-1',\n              '2015-2',\n              '2015-3',\n              '2015-4',\n              '2015-5',\n              '2015-6',\n              '2015-7',\n              '2015-8',\n              '2015-9',\n              '2015-10',\n              '2015-11',\n              '2015-12',\n            ],\n          },\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            splitLine: {\n              lineStyle: {\n                color: echarts.splitLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        series: [\n          {\n            name: '2015 Precipitation',\n            type: 'line',\n            xAxisIndex: 1,\n            smooth: true,\n            data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3],\n          },\n          {\n            name: '2016 Precipitation',\n            type: 'line',\n            smooth: true,\n            data: [3.9, 5.9, 11.1, 18.7, 48.3, 69.2, 231.6, 46.6, 55.4, 18.4, 10.3, 0.7],\n          },\n        ],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-line',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsLineComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts.bg,\n        color: [colors.danger, colors.primary, colors.info],\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c}',\n        },\n        legend: {\n          left: 'left',\n          data: ['Line 1', 'Line 2', 'Line 3'],\n          textStyle: {\n            color: echarts.textColor,\n          },\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        yAxis: [\n          {\n            type: 'log',\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            splitLine: {\n              lineStyle: {\n                color: echarts.splitLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true,\n        },\n        series: [\n          {\n            name: 'Line 1',\n            type: 'line',\n            data: [1, 3, 9, 27, 81, 247, 741, 2223, 6669],\n          },\n          {\n            name: 'Line 2',\n            type: 'line',\n            data: [1, 2, 4, 8, 16, 32, 64, 128, 256],\n          },\n          {\n            name: 'Line 3',\n            type: 'line',\n            data: [1 / 2, 1 / 4, 1 / 8, 1 / 16, 1 / 32, 1 / 64, 1 / 128, 1 / 256, 1 / 512],\n          },\n        ],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-bar',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsBarComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n\n      const colors: any = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts.bg,\n        color: [colors.primaryLight],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow',\n          },\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true,\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            splitLine: {\n              lineStyle: {\n                color: echarts.splitLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        series: [\n          {\n            name: 'Score',\n            type: 'bar',\n            barWidth: '60%',\n            data: [10, 52, 200, 334, 390, 330, 220],\n          },\n        ],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-pie',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsPieComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts?.bg,\n        color: [\n          colors?.warningLight,\n          colors?.infoLight,\n          colors?.dangerLight,\n          colors?.successLight,\n          colors?.primaryLight\n        ],\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)',\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: ['USA', 'Germany', 'France', 'Canada', 'Russia'],\n          textStyle: {\n            color: echarts.textColor,\n          },\n        },\n        series: [\n          {\n            name: 'Countries',\n            type: 'pie',\n            radius: '80%',\n            center: ['50%', '50%'],\n            data: [\n              { value: 335, name: 'Germany' },\n              { value: 310, name: 'France' },\n              { value: 234, name: 'Canada' },\n              { value: 135, name: 'Russia' },\n              { value: 1548, name: 'USA' },\n            ],\n            itemStyle: {\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: echarts.itemHoverShadowColor,\n              },\n            },\n            label: {\n              normal: {\n                textStyle: {\n                  color: echarts.textColor,\n                },\n              },\n            },\n            labelLine: {\n              normal: {\n                lineStyle: {\n                  color: echarts.axisLineColor,\n                },\n              },\n            },\n          },\n        ],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-charts',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class ChartsComponent {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-chartjs',\n  styleUrls: ['./chartjs.component.scss'],\n  templateUrl: './chartjs.component.html',\n})\nexport class ChartjsComponent {}\n","import { NgModule } from '@angular/core';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { ChartModule } from 'angular2-chartjs';\nimport { NbCardModule } from '@nebular/theme';\n\nimport { ThemeModule } from '../../@theme/theme.module';\n\nimport { ChartsRoutingModule, routedComponents } from './charts-routing.module';\nimport { ChartjsBarComponent } from './chartjs/chartjs-bar.component';\nimport { ChartjsLineComponent } from './chartjs/chartjs-line.component';\nimport { ChartjsPieComponent } from './chartjs/chartjs-pie.component';\nimport { ChartjsMultipleXaxisComponent } from './chartjs/chartjs-multiple-xaxis.component';\nimport { ChartjsBarHorizontalComponent } from './chartjs/chartjs-bar-horizontal.component';\nimport { ChartjsRadarComponent } from './chartjs/chartjs-radar.component';\nimport { D3BarComponent } from './d3/d3-bar.component';\nimport { D3LineComponent } from './d3/d3-line.component';\nimport { D3PieComponent } from './d3/d3-pie.component';\nimport { D3AreaStackComponent } from './d3/d3-area-stack.component';\nimport { D3PolarComponent } from './d3/d3-polar.component';\nimport { D3AdvancedPieComponent } from './d3/d3-advanced-pie.component';\nimport { EchartsLineComponent } from './echarts/echarts-line.component';\nimport { EchartsPieComponent } from './echarts/echarts-pie.component';\nimport { EchartsBarComponent } from './echarts/echarts-bar.component';\nimport { EchartsMultipleXaxisComponent } from './echarts/echarts-multiple-xaxis.component';\nimport { EchartsAreaStackComponent } from './echarts/echarts-area-stack.component';\nimport { EchartsBarAnimationComponent } from './echarts/echarts-bar-animation.component';\nimport { EchartsRadarComponent } from './echarts/echarts-radar.component';\n\nconst components = [\n  ChartjsBarComponent,\n  ChartjsLineComponent,\n  ChartjsPieComponent,\n  ChartjsMultipleXaxisComponent,\n  ChartjsBarHorizontalComponent,\n  ChartjsRadarComponent,\n  D3BarComponent,\n  D3LineComponent,\n  D3PieComponent,\n  D3AreaStackComponent,\n  D3PolarComponent,\n  D3AdvancedPieComponent,\n  EchartsLineComponent,\n  EchartsPieComponent,\n  EchartsBarComponent,\n  EchartsMultipleXaxisComponent,\n  EchartsAreaStackComponent,\n  EchartsBarAnimationComponent,\n  EchartsRadarComponent,\n];\n\n@NgModule({\n  imports: [\n    ThemeModule,\n    ChartsRoutingModule,\n    NgxEchartsModule,\n    NgxChartsModule,\n    ChartModule,\n    NbCardModule,\n  ],\n  declarations: [...routedComponents, ...components],\n})\nexport class ChartsModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChartsComponent } from './charts.component';\nimport { EchartsComponent } from './echarts/echarts.component';\nimport { D3Component } from './d3/d3.component';\nimport { ChartjsComponent } from './chartjs/chartjs.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: ChartsComponent,\n  children: [{\n    path: 'echarts',\n    component: EchartsComponent,\n  }, {\n    path: 'd3',\n    component: D3Component,\n  }, {\n    path: 'chartjs',\n    component: ChartjsComponent,\n  }],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChartsRoutingModule { }\n\nexport const routedComponents = [\n  ChartsComponent,\n  EchartsComponent,\n  D3Component,\n  ChartjsComponent,\n];\n","<div class=\"row\">\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Pie</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-pie></ngx-echarts-pie>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Bar</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-bar></ngx-echarts-bar>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Line</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-line></ngx-echarts-line>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Multiple x-axis</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-multiple-xaxis></ngx-echarts-multiple-xaxis>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Area Stack</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-area-stack></ngx-echarts-area-stack>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Bar Animation</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-bar-animation></ngx-echarts-bar-animation>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Radar</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-radar></ngx-echarts-radar>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","<div class=\"row\">\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Pie</nb-card-header>\n      <nb-card-body>\n        <ngx-d3-pie></ngx-d3-pie>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Bar</nb-card-header>\n      <nb-card-body>\n        <ngx-d3-bar></ngx-d3-bar>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Line</nb-card-header>\n      <nb-card-body>\n        <ngx-d3-line></ngx-d3-line>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Advanced Pie</nb-card-header>\n      <nb-card-body>\n        <ngx-d3-advanced-pie></ngx-d3-advanced-pie>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Area Chart</nb-card-header>\n      <nb-card-body>\n        <ngx-d3-area-stack></ngx-d3-area-stack>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","<div class=\"row\">\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Pie</nb-card-header>\n      <nb-card-body>\n        <ngx-chartjs-pie></ngx-chartjs-pie>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Bar</nb-card-header>\n      <nb-card-body>\n        <ngx-chartjs-bar></ngx-chartjs-bar>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Line</nb-card-header>\n      <nb-card-body>\n        <ngx-chartjs-line></ngx-chartjs-line>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Multiple x-axis</nb-card-header>\n      <nb-card-body>\n        <ngx-chartjs-multiple-xaxis></ngx-chartjs-multiple-xaxis>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Bar Horizontal</nb-card-header>\n      <nb-card-body>\n        <ngx-chartjs-bar-horizontal></ngx-chartjs-bar-horizontal>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Radar</nb-card-header>\n      <nb-card-body>\n        <ngx-chartjs-radar></ngx-chartjs-radar>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n"]}