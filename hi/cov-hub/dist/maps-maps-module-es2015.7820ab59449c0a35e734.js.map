{"version":3,"sources":["webpack:///src/app/pages/maps/maps.component.ts","webpack:///src/app/pages/maps/nation/district-ranking-bar.component.ts","webpack:///src/app/pages/maps/nation/nation.component.html","webpack:///src/app/pages/maps/nation/nation.component.ts","webpack:///src/app/pages/maps/region/region.component.ts","webpack:///src/app/pages/maps/region/region.component.html","webpack:///src/app/pages/maps/maps-routing.module.ts","webpack:///src/app/pages/maps/maps.module.ts","webpack:///node_modules/leaflet.fullscreen/Control.FullScreen.js"],"names":["MapsComponent","DistrictRankingComponent","theme","this","themeSubscription","getJsTheme","subscribe","config","chartjs","variables","data","labels","datasets","dataSets","options","maintainAspectRatio","responsive","legend","fontColor","textColor","scales","xAxes","gridLines","display","color","axisLineColor","ticks","yAxes","unsubscribe","NationComponent","mapUtilsService","regionService","returneeService","themeService","title","mapLayerDistrict","bucket","label","mapLayerProvince","mapLayerRoads","districtNameValPairsSero","districtNameValPairsRatio","districtPcrDataSets","backgroundColor","quadDataCounter","BehaviorSubject","loading","mapReady","layers","openStreetMaps","zoom","crs","EPSG3857","center","lat","lng","zoomControl","preferCanvas","geoJsonLayerOptions","onEachFeature","_","layer","thisMap","map","on","click","e","fitBounds","target","getBounds","style","readyToRenderChart","hexToRgbA","primaryLight","infoLight","layersControl","baseLayers","overlays","fetchLabelFeatures","receiveAndSetStats","setLayerFromBucket","getAndCache","featureCollection","districtsGeoJson","raiseQuadDataCount","next","getValue","merge","getCacheDistrictHealthStats","getCacheDistrictWiseCensus","from","getAllWards","stats","isDistrictHealthStats","districtsHealthStats","isDistrictCensus","districtPopulation","returneeStats","count","setStats","districtName","find","stat","toLowerCase","startsWith","values","value","district","markerClusterGroup","featureGroup","addLayer","forEach","foundDistrict","features","feature","toUpperCase","properties","FIRST_DIST","pointOfInaccessibility","geometry","coordinates","poiLabelMarker","getDefaultMarker","setPopup","sortAndAddSetRankingChartData","ready","addTo","sortFunc","a","b","mapLabelFunc","val","mapDataFunc","sort","districtNamesSero","districtNamesRatio","proSero","push","pcrRatio","poiMarker","datum","returneeInfo","findByNameFromReturneeStats","censusInfo","findByNameFromCensusStats","returneeTotal","populationTotal","total","pcrTotal","total_swab_collection","rdtTotal","total_rdt_tests","pcrNegatives","negatives","rdtNegatives","negatives_1","returneeOverPop","toFixed","rdtCoverageOverPop","rdtPositiveOverTests","pcrCoverageOverPop","pcrPositiveOverTestsNum","pcrPositiveOverTests","positiveSeroPrevalenceNum","positiveSeroPrevalence","Number","isNaN","appendSeroRankingChartData","appendRatioRankingChartData","popup","maxWidth","setContent","isolated_total","total_positives","positives","quarantined_total","bindPopup","remove","currentMap","fullScreenControl","setTimeout","invalidateSize","onMapReady","RegionComponent","route","region","componentAlive","wardDataReceived","isAlive","paramMap","pipe","takeWhile","params","paramName","get","replace","type","receiveAndSetWards","getWards","wards","getStats","received","foundFeature","DDGNWW","trim","getCacheAreaWards","regionKey","getCacheAreaStats","popupHtml","DISTRICT","GaPa_NaPa","NEW_WARD_N","Returnee","Not_Quarantined","PCR","Positive","RDT","Quarantined","Negative","routes","path","component","children","MapsRoutingModule","forChild","MapsModule","ChartModule","L","Control","FullScreen","extend","position","titleCancel","forceSeparateButton","forcePseudoFullscreen","fullscreenElement","onAdd","container","className","content","_container","DomUtil","create","_createButton","toggleFullScreen","_map","fullscreenControl","_toggleTitle","onRemove","DomEvent","off","link","stopPropagation","preventDefault","fullScreenApi","fullScreenEventName","_handleFullscreenChange","document","fn","context","href","innerHTML","setAttribute","_exitFired","_isFullscreen","supportsFullScreen","cancelFullScreen","removeClass","fire","requestFullScreen","addClass","isFullScreen","Map","include","toggleFullscreen","addInitHook","addControl","control","fullscreen","fullscreenControlOptions","prefix","browserPrefixes","split","exitFullscreen","i","il","length","webkitIsFullScreen","msFullscreenElement","el","requestFullscreen","msRequestFullscreen","msExitFullscreen","jQuery","each","window"],"mappings":"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","file":"x","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-maps',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n  styleUrls: ['./maps.component.scss'],\n})\nexport class MapsComponent {\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { BarChartDataSet } from '../../../@models/domain.model';\n\n@Component({\n  selector: 'ngx-district-bar',\n  template: `\n    <chart type=\"bar\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class DistrictRankingComponent implements OnInit, OnDestroy {\n  data: any;\n  options: any;\n  themeSubscription: any;\n\n  @Input() dataSets: BarChartDataSet[];\n  @Input() labels: string[];\n\n  constructor(private theme: NbThemeService) {}\n\n  ngOnInit(): void {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n\n      const chartjs: any = config?.variables?.chartjs || null;\n\n      const labels = this.labels;\n      const datasets = this.dataSets;\n\n      this.data = {\n        labels,\n        datasets,\n      };\n\n      this.options = {\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: false,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n        },\n      };\n    });\n  }\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","<nb-card>\n  <nb-card-header>{{ title | titlecase }} </nb-card-header>\n  <nb-card-body>\n    <div leaflet\n      [leafletOptions]=\"options\"\n      (leafletMapReady)=\"onMapReady($event)\"\n      [leafletLayersControl]=\"layersControl\">\n    </div>\n  </nb-card-body>\n</nb-card>\n\n<nb-card *ngIf=\"readyToRenderChart\">\n  <nb-card-header>+ve Sero Prevalence Ranking</nb-card-header>\n  <nb-card-body>\n    <ngx-district-bar [dataSets]=\"[districtPcrDataSets[0]]\" [labels]=\"districtNamesSero\"></ngx-district-bar>\n  </nb-card-body>\n</nb-card>\n<nb-card *ngIf=\"readyToRenderChart\">\n  <nb-card-header>+ve PCR Result Ratio Ranking</nb-card-header>\n  <nb-card-body>\n    <ngx-district-bar [dataSets]=\"[districtPcrDataSets[1]]\" [labels]=\"districtNamesRatio\"></ngx-district-bar>\n  </nb-card-body>\n</nb-card>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NbColorHelper, NbThemeService } from '@nebular/theme';\nimport * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport polylabel from 'polylabel';\nimport { BehaviorSubject, from, merge, Subscription } from 'rxjs';\nimport 'style-loader!leaflet/dist/leaflet.css';\nimport { MapUtilsService } from '../../../@comp/services/map-utils.service';\nimport { RegionService } from '../../../@comp/services/region.service';\nimport { Census2011 } from '../../../@models/db/docs/census.model';\nimport { HealthStats } from '../../../@models/db/docs/health-stats.model';\nimport { RETTupleRev } from '../../../@models/db/table-headers.model';\nimport {\n  BarChartDataSet, FeatureCollection,\n  GovDistrictProperties,\n  GovProvinceProperties,\n  RoadMajorProperties\n} from '../../../@models/domain.model';\nimport { ReturneeService } from '../../../services/db/returnee.service';\n\n\n\ninterface MapLayer {\n  bucket: string;\n  label: string;\n}\n\n@Component({\n  selector: 'ngx-leaflet',\n  styleUrls: ['./nation.component.scss'],\n  templateUrl: './nation.component.html',\n})\nexport class NationComponent implements OnInit, OnDestroy {\n  title = 'National Covid Map';\n\n  private readonly mapLayerDistrict = {\n    bucket: 'gov_districts',\n    label: 'Districts',\n  };\n  private readonly mapLayerProvince = {\n    bucket: 'gov_provinces',\n    label: 'Provinces',\n  };\n  private readonly mapLayerRoads = {\n    bucket: 'roads_major',\n    label: 'Major Roads',\n  };\n\n  private districtsGeoJson: FeatureCollection<GovDistrictProperties>;\n  private districtsHealthStats: HealthStats.Districts;\n  private districtPopulation: Census2011.Districts;\n  private returneeStats: Array<RETTupleRev> | undefined;\n\n  districtNameValPairsSero: [string, number][] = [];\n  districtNamesSero: string[];\n  districtNameValPairsRatio: [string, number][] = [];\n  districtNamesRatio: string[];\n\n  districtPcrDataSets: BarChartDataSet[] = [{\n    label: '',\n    data: [],\n    backgroundColor: ''\n  }, {\n    label: '',\n    data: [],\n    backgroundColor: ''\n  }];\n\n  private quadDataCounter: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n\n  private featureGroup: L.FeatureGroup;\n  private markerClusterGroup: L.MarkerClusterGroup;\n\n  loading = true;\n\n  private map: L.Map;\n  private mapReady: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  layersControl: any;\n\n  options = {\n    layers: [this.mapUtilsService.openStreetMaps],\n    zoom: 7,\n    crs: L.CRS.EPSG3857,\n    center: L.latLng({ lat: 27.700769, lng: 85.30014 }),\n    zoomControl: true,\n    preferCanvas: false,\n  };\n\n  private geoJsonLayerOptions = {\n    onEachFeature: (_: any, layer: L.Layer) => {\n      const thisMap = this.map;\n      layer.on({\n        click: (e) => {\n          thisMap.fitBounds(e.target.getBounds());\n        },\n      });\n    }, style: {\n      'color': '#33A8FF',\n      'weight': 4,\n      'opacity': 0.65\n    }\n  };\n\n  private themeSubscription: Subscription;\n\n  readyToRenderChart = false;\n\n  constructor(\n    private mapUtilsService: MapUtilsService,\n    private regionService: RegionService,\n    private returneeService: ReturneeService,\n    private themeService: NbThemeService\n  ) {\n    this.themeSubscription = this.themeService.getJsTheme()\n      .subscribe(config => {\n        this.districtPcrDataSets = [{\n          ...this.districtPcrDataSets[0],\n          backgroundColor: NbColorHelper.hexToRgbA(config?.variables?.primaryLight, 0.8),\n        },\n        {\n          ...this.districtPcrDataSets[1],\n          backgroundColor: NbColorHelper.hexToRgbA(config?.variables?.infoLight, 0.8)\n        }];\n      });\n  }\n\n  ngOnInit() {\n    this.layersControl = { ...this.mapUtilsService.baseLayers, overlays: {} };\n    this.fetchLabelFeatures();\n    this.receiveAndSetStats();\n  }\n\n  async fetchLabelFeatures() {\n    this.setLayerFromBucket<GovDistrictProperties>(this.mapLayerDistrict);\n    this.setLayerFromBucket<GovProvinceProperties>(this.mapLayerProvince, {\n      'color': '#043EB9',\n      'weight': 5,\n      'opacity': 0.65\n  });\n    this.setLayerFromBucket<RoadMajorProperties>(this.mapLayerRoads, {\n      'color': '#2E70E4',\n      'weight': 3,\n      'opacity': 0.65\n  });\n\n  }\n\n  setLayerFromBucket<T>(layer: MapLayer, style?: any) {\n    this.regionService\n      .getAndCache<FeatureCollection<T>>(layer.bucket)\n      .subscribe((featureCollection) => {\n        this.layersControl.overlays[layer.label] = L.geoJSON(\n          featureCollection as any, {style: style}\n        );\n        if (layer.bucket === this.mapLayerDistrict.bucket) {\n          this.districtsGeoJson = (featureCollection as unknown) as FeatureCollection<\n            GovDistrictProperties\n          >;\n          this.layersControl.overlays['Districts'] = L.geoJSON(\n            featureCollection as any,\n            this.geoJsonLayerOptions\n          );\n          this.raiseQuadDataCount();\n        }\n      });\n  }\n\n  private raiseQuadDataCount() {\n    this.quadDataCounter.next(this.quadDataCounter.getValue() + 1);\n  }\n\n  private async receiveAndSetStats() {\n    merge(\n      this.regionService.getCacheDistrictHealthStats(),\n      this.regionService.getCacheDistrictWiseCensus(),\n      from(this.returneeService.getAllWards())\n    ).subscribe((stats) => {\n      if (HealthStats.isDistrictHealthStats(stats)) {\n        this.districtsHealthStats = stats;\n        this.raiseQuadDataCount();\n      } else if (Census2011.isDistrictCensus(stats)) {\n        this.districtPopulation = stats;\n        this.raiseQuadDataCount();\n      } else {\n        this.returneeStats = stats as RETTupleRev[];\n        this.raiseQuadDataCount();\n      }\n    });\n\n    // wait for all 5 data sets to be received first\n    this.quadDataCounter.subscribe((count) => {\n      if (count === 4) this.setStats();\n    });\n  }\n\n  findByNameFromReturneeStats(districtName: string): RETTupleRev | undefined {\n    return this.returneeStats?.find((stat) =>\n      districtName?.toLowerCase()?.startsWith(stat[2]?.toLowerCase())\n    );\n  }\n\n  findByNameFromCensusStats(districtName: string): Census2011.District | undefined {\n    return this.districtPopulation?.values?.find((value: any) =>\n      districtName?.toLowerCase()?.startsWith(value?.district?.toLowerCase())\n    );\n  }\n\n  private setStats() {\n    this.markerClusterGroup = L.markerClusterGroup();\n\n    this.featureGroup = L.featureGroup();\n    this.featureGroup.addLayer(this.markerClusterGroup);\n\n    this.districtsHealthStats.values.forEach((stats) => {\n      const foundDistrict = this.districtsGeoJson.features.find((feature) =>\n        stats.district.toUpperCase().startsWith(feature.properties.FIRST_DIST)\n      ); // TODO change to DDGN comparison\n\n      if (!foundDistrict) return;\n\n      const pointOfInaccessibility = polylabel(\n        foundDistrict.geometry.coordinates\n      ) as [number, number];\n\n      const poiLabelMarker = this.mapUtilsService.getDefaultMarker(\n        pointOfInaccessibility\n      );\n\n      this.setPopup(poiLabelMarker, stats);\n      this.markerClusterGroup.addLayer(poiLabelMarker);\n    });\n\n    this.layersControl.overlays['Stats'] = this.markerClusterGroup;\n\n    this.sortAndAddSetRankingChartData();\n    this.readyToRenderChart = true;\n\n    this.mapReady.subscribe((ready) => {\n      if (ready) {\n        this.featureGroup.addTo(this.map);\n        this.loading = false;\n      }\n    });\n  }\n\n  sortAndAddSetRankingChartData() {\n    const sortFunc = (a: [string, number], b: [string, number]) => b[1] - a[1]; // highest to lowest\n    const mapLabelFunc = (val: [string, number]) => val[0];\n    const mapDataFunc = (val: [string, number]) => val[1];\n\n    this.districtNameValPairsSero.sort(sortFunc);\n    this.districtNameValPairsRatio.sort(sortFunc);\n\n    this.districtNamesSero = this.districtNameValPairsSero.map(mapLabelFunc);\n    this.districtPcrDataSets[0].data = this.districtNameValPairsSero.map(mapDataFunc);\n\n    this.districtNamesRatio = this.districtNameValPairsRatio.map(mapLabelFunc);\n    this.districtPcrDataSets[1].data = this.districtNameValPairsRatio.map(mapDataFunc);\n  }\n\n  appendSeroRankingChartData(districtName: string, proSero: number) {\n    this.districtNameValPairsSero.push([districtName, proSero]);\n  }\n\n  appendRatioRankingChartData(districtName: string, pcrRatio: number) {\n    this.districtNameValPairsRatio.push([districtName, pcrRatio]);\n  }\n\n\n  private setPopup(poiMarker: L.Marker, datum: HealthStats.District) {\n    const returneeInfo = this.findByNameFromReturneeStats(datum.district);\n    const censusInfo = this.findByNameFromCensusStats(datum.district);\n\n    // this array is based on the returnee v8 schema, FIX ME create an object with keys instead\n    const returneeTotal = returneeInfo ? returneeInfo[5] : 0;\n    const populationTotal = censusInfo ? censusInfo.total : 100_000;\n    // TODO get all district population in the database to remove a need for a default population\n\n    const pcrTotal = datum.total_swab_collection;\n    const rdtTotal = datum.total_rdt_tests;\n\n    const pcrNegatives = datum.negatives;\n    const rdtNegatives = datum.negatives_1;\n\n    const returneeOverPop = (returneeTotal / populationTotal).toFixed(4);\n    const rdtCoverageOverPop = (rdtTotal / populationTotal).toFixed(4);\n    const rdtPositiveOverTests = ((rdtTotal - rdtNegatives) / rdtTotal).toFixed(4);\n\n    const pcrCoverageOverPop = (pcrTotal / populationTotal).toFixed(4);\n    const pcrPositiveOverTestsNum = (pcrTotal - pcrNegatives) / pcrTotal;\n    const pcrPositiveOverTests = pcrPositiveOverTestsNum.toFixed(4);\n    const positiveSeroPrevalenceNum = (pcrTotal - pcrNegatives) / populationTotal;\n    const positiveSeroPrevalence = positiveSeroPrevalenceNum.toFixed(4);\n\n    if (\n      positiveSeroPrevalenceNum !== 0 &&\n      !Number.isNaN(positiveSeroPrevalenceNum)\n    ) {\n      this.appendSeroRankingChartData(\n        datum.district,\n        positiveSeroPrevalenceNum * 100,\n      );\n    }\n\n    if (\n      pcrPositiveOverTestsNum !== 0 &&\n      !Number.isNaN(pcrPositiveOverTestsNum)\n    ) {\n      this.appendRatioRankingChartData(\n        datum.district,\n        pcrPositiveOverTestsNum * 100\n      );\n    }\n\n    const popup = L.popup({ maxWidth: 100 });\n    const popupHtml = `\n      <div>\n      <style type=\"text/css\">\n        .tg  {border-collapse:collapse;border-spacing:0;}\n        .tg td {\n          border-color:black;\n          border-style:solid;\n          border-width:1px;\n          font-family:Arial, sans-serif;\n          font-size:12px;\n          overflow:hidden;\n          padding:10px 8px;\n          word-break:normal;\n        }\n        .tg th {\n          border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n          font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;\n        }\n        .tg .tg-x5oc{background-color:#fe996b;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-0cjc{background-color:#67fd9a;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-266k{background-color:#9b9b9b;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-d52n{background-color:#32cb00;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-7od5{background-color:#9aff99;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-y698{background-color:#efefef;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-tw5s{background-color:#fe0000;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-pidv{background-color:#ffce93;border-color:inherit;text-align:left;vertical-align:top}\n      </style>\n      <table class=\"tg\">\n        <thead>\n          <tr>\n            <th class=\"tg-y698\" colspan=\"2\">District</th>\n            <th class=\"tg-y698\" colspan=\"3\">${datum.district}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td class=\"tg-0pky\" colspan=\"2\">+ve Sero Prev.</td>\n            <td class=\"tg-0pky\" colspan=\"3\">${positiveSeroPrevalence}</td>\n          </tr>\n          <tr>\n            <td class=\"tg-y698\" colspan=\"2\">PCR coverage</td>\n            <td class=\"tg-y698\" colspan=\"3\">${pcrCoverageOverPop}</td>\n          </tr>\n          <tr>\n            <td class=\"tg-0pky\" colspan=\"2\">PCR +ve ratio</td>\n            <td class=\"tg-0pky\" colspan=\"3\">${pcrPositiveOverTests}</td>\n          </tr>\n          <tr>\n            <td class=\"tg-y698\" colspan=\"2\">RDT coverage</td>\n            <td class=\"tg-y698\" colspan=\"3\">${rdtCoverageOverPop}</td>\n          </tr>\n          <tr>\n            <td class=\"tg-0pky\" colspan=\"2\">RDT +ve ratio</td>\n            <td class=\"tg-0pky\" colspan=\"3\">${rdtPositiveOverTests}</td>\n          </tr>\n          <tr>\n            <td class=\"tg-0pky\" colspan=\"2\">Returnee ratio</td>\n            <td class=\"tg-0pky\" colspan=\"3\">${returneeOverPop}</td>\n          </tr>\n          <tr>\n            <td class=\"tg-266k\" colspan=\"2\">Returnee</td>\n            <td class=\"tg-266k\">Test</td>\n            <td class=\"tg-266k\">PCR</td>\n            <td class=\"tg-266k\">RDT</td>\n          </tr>\n          <tr>\n            <td class=\"tg-pidv\">Isolated</td>\n            <td class=\"tg-pidv\">${datum.isolated_total}</td>\n            <td class=\"tg-x5oc\">Positive</td>\n            <td class=\"tg-x5oc\">${datum.total_positives}</td>\n            <td class=\"tg-x5oc\">${datum.positives}</td>\n          </tr>\n          <tr>\n            <td class=\"tg-pidv\">Quarantined</td>\n            <td class=\"tg-pidv\">${datum.quarantined_total}</td>\n            <td class=\"tg-0cjc\">Negative</td>\n            <td class=\"tg-0cjc\">${pcrNegatives}</td>\n            <td class=\"tg-0cjc\">${rdtNegatives}</td>\n          </tr>\n          <tr>\n            <td class=\"tg-y698\">Total</td>\n            <td class=\"tg-y698\">${returneeTotal}</td>\n            <td class=\"tg-y698\"> </td>\n            <td class=\"tg-y698\">${pcrTotal}</td>\n            <td class=\"tg-y698\">${rdtTotal}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>`;\n\n    popup.setContent(popupHtml);\n    poiMarker.bindPopup(popup);\n  }\n\n  ngOnDestroy() {\n    this.map.remove();\n    this.themeSubscription.unsubscribe();\n  }\n\n  onMapReady(currentMap: L.Map) {\n    this.map = currentMap;\n    this.mapUtilsService.fullScreenControl.addTo(this.map);\n    this.mapReady.next(true);\n\n    setTimeout(() => {\n      this.map.invalidateSize();\n    }, 0);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport polylabel from 'polylabel';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\nimport { MapUtilsService } from '../../../@comp/services/map-utils.service';\nimport { RegionService } from '../../../@comp/services/region.service';\nimport { Area, Feature, FeatureCollection, WardProperties } from '../../../@models/domain.model';\n\n\nconst defaultAreaKey = 'kathmandu_valley';\n\n@Component({\n  selector: 'ngx-region',\n  templateUrl: './region.component.html',\n  styleUrls: ['./region.component.scss'],\n})\nexport class RegionComponent implements OnInit, OnDestroy {\n  region: string = 'Kathmandu Valley';\n  type: string;\n\n  loading = true;\n\n  private componentAlive = true;\n\n  private map: L.Map;\n  private mapReady: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  layersControl: any;\n\n  options = {\n    layers: [this.mapUtilsService.openStreetMaps],\n    zoom: 12,\n    crs: L.CRS.EPSG3857,\n    center: L.latLng({ lat: 27.700769, lng: 85.33014 }),\n    zoomControl: true,\n    preferCanvas: false,\n  };\n\n  private geoJsonLayerOptions = {\n    onEachFeature: (_: any, layer: L.Layer) => {\n      const thisMap = this.map;\n      layer.on({\n        click: (e) => {\n          thisMap.fitBounds(e.target.getBounds());\n        },\n      });\n    },\n  };\n\n  private stats: Area.Stats;\n  private wards: FeatureCollection<WardProperties>;\n  private wardDataReceived: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  private featureGroup: L.FeatureGroup;\n  private markerClusterGroup: L.MarkerClusterGroup;\n\n  private isAlive = () => this.componentAlive;\n\n  constructor(\n    private route: ActivatedRoute,\n    private regionService: RegionService,\n    private mapUtilsService: MapUtilsService,\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(takeWhile(this.isAlive)).subscribe((params: ParamMap) => {\n      const paramName = params?.get('name');\n      this.region =  paramName?.replace(/_/g, ' ') || this.region;\n      this.type = params?.get('type') || 'returnees';\n    });\n    this.layersControl = {...this.mapUtilsService.baseLayers, overlays: {}};\n    this.receiveAndSetWards();\n    this.receiveAndSetStats();\n  }\n\n  private receiveAndSetWards() {\n    this.getWards().subscribe((wards: FeatureCollection<WardProperties>) => {\n      this.wards = wards;\n      this.layersControl.overlays['Wards'] = L.geoJSON(wards as any, this.geoJsonLayerOptions);\n      this.wardDataReceived.next(true);\n    });\n  }\n\n  private receiveAndSetStats() {\n    this.getStats().subscribe((stats: Area.Stats) => {\n      this.stats = stats;\n      this.wardDataReceived.subscribe(received => {\n        if (received) this.setStats();\n      });\n    });\n  }\n\n  private setStats() {\n    this.markerClusterGroup = L.markerClusterGroup();\n    this.featureGroup = L.featureGroup();\n    this.featureGroup.addLayer(this.markerClusterGroup);\n    this.stats.data.forEach(datum => {\n      const foundFeature: any = this.wards?.features?.find(feature => datum?.DDGNWW === feature?.properties?.DDGNWW);\n      if (!foundFeature && !foundFeature?.geometry) return;\n      const pointOfInaccessibility = polylabel(foundFeature?.geometry?.coordinates) as [number, number];\n      const poiLabelMarker = this.mapUtilsService?.getDefaultMarker(pointOfInaccessibility);\n      this.setPopup(poiLabelMarker, datum, foundFeature);\n      this.markerClusterGroup?.addLayer(poiLabelMarker);\n    });\n    this.layersControl.overlays['Stats'] = this.markerClusterGroup;\n    this.mapReady.subscribe(ready => {\n      if (ready) {\n        this.featureGroup.addTo(this.map);\n        this.loading = false;\n      }\n    });\n  }\n\n\n\n  get regionKey() {\n    return this.region ? this.region.trim().replace(/ /g, '_').toLowerCase() : null;\n  }\n\n  private getWards(): Observable<FeatureCollection<WardProperties>> {\n    return this.regionService.getCacheAreaWards(this.regionKey || defaultAreaKey);\n  }\n\n  private getStats(): Observable<Area.Stats> {\n    return this.regionService.getCacheAreaStats(this.regionKey || defaultAreaKey);\n  }\n\n  ngOnDestroy(): void {\n    this.componentAlive = false;\n    this.map.remove();\n  }\n\n  onMapReady(currentMap: L.Map) {\n    this.map = currentMap;\n    this.mapUtilsService.fullScreenControl.addTo(this.map);\n    this.mapReady.next(true);\n\n    setTimeout(() => {\n      this.map.invalidateSize();\n    }, 0);\n  }\n\n  // Do not use angular component to replace this\n  private setPopup(poiMarker: L.Marker, datum: Area.Datum, feature: Feature<WardProperties> | undefined) {\n    const popup = L.popup({ maxWidth: 100 });\n    const returneeTotal = datum.Returnee.Quarantined + datum.Returnee.Not_Quarantined;\n    const pcrTotal = datum.PCR.Positive + datum.PCR.Negative;\n    const rdtTotal = datum.RDT.Positive + datum.RDT.Negative;\n\n    const popupHtml = `\n      <div>\n      <style type=\"text/css\">\n        .tg  {border-collapse:collapse;border-spacing:0;}\n        .tg td {\n          border-color:black;\n          border-style:solid;\n          border-width:1px;\n          font-family:Arial, sans-serif;\n          font-size:14px;\n          overflow:hidden;\n          padding:10px 5px;\n          word-break:normal;\n        }\n        .tg th {\n          border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n          font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;\n        }\n        .tg .tg-x5oc{background-color:#fe996b;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-0cjc{background-color:#67fd9a;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-266k{background-color:#9b9b9b;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-d52n{background-color:#32cb00;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-7od5{background-color:#9aff99;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-y698{background-color:#efefef;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-tw5s{background-color:#fe0000;border-color:inherit;text-align:left;vertical-align:top}\n        .tg .tg-pidv{background-color:#ffce93;border-color:inherit;text-align:left;vertical-align:top}\n      </style>\n      <table class=\"tg\">\n        <thead>\n          <tr>\n            <th class=\"tg-y698\" colspan=\"2\">District</th>\n            <th class=\"tg-y698\" colspan=\"3\">${feature?.properties?.DISTRICT}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td class=\"tg-0pky\" colspan=\"2\">Palika</td>\n            <td class=\"tg-0pky\" colspan=\"3\">${feature?.properties?.GaPa_NaPa}</td>\n          </tr>\n          <tr>\n            <td class=\"tg-y698\" colspan=\"2\">Ward No</td>\n            <td class=\"tg-y698\" colspan=\"3\">${feature?.properties?.NEW_WARD_N}</td>\n          </tr>\n          <tr>\n            <td class=\"tg-266k\" colspan=\"2\">Returnee</td>\n            <td class=\"tg-266k\">Test</td>\n            <td class=\"tg-266k\">PCR</td>\n            <td class=\"tg-266k\">RDT</td>\n          </tr>\n          <tr>\n            <td class=\"tg-pidv\">Isolated</td>\n            <td class=\"tg-pidv\">${datum.Returnee.Not_Quarantined}</td>\n            <td class=\"tg-x5oc\">Positive</td>\n            <td class=\"tg-x5oc\">${datum.PCR.Positive}</td>\n            <td class=\"tg-x5oc\">${datum.RDT.Positive}</td>\n          </tr>\n          <tr>\n            <td class=\"tg-pidv\">Quarantined</td>\n            <td class=\"tg-pidv\">${datum.Returnee.Quarantined}</td>\n            <td class=\"tg-0cjc\">Negative</td>\n            <td class=\"tg-0cjc\">${datum.PCR.Negative}</td>\n            <td class=\"tg-0cjc\">${datum.RDT.Negative}</td>\n          </tr>\n          <tr>\n            <td class=\"tg-y698\">Total</td>\n            <td class=\"tg-y698\">${returneeTotal}</td>\n            <td class=\"tg-y698\"> </td>\n            <td class=\"tg-y698\">${pcrTotal}</td>\n            <td class=\"tg-y698\">${rdtTotal}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>`;\n\n    popup.setContent(popupHtml);\n    poiMarker.bindPopup(popup);\n\n  }\n}\n","<nb-card>\n  <nb-card-header>{{ region | titlecase }} : {{ type | titlecase }} Map</nb-card-header>\n  <nb-card-body [nbSpinner]=\"loading\" nbSpinnerSize=\"giant\" nbSpinnerStatus=\"primary\">\n    <div leaflet\n      [leafletOptions]=\"options\"\n      (leafletMapReady)=\"onMapReady($event)\"\n      [leafletLayersControl]=\"layersControl\">\n    </div>\n  </nb-card-body>\n</nb-card>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MapsComponent } from './maps.component';\nimport { DistrictRankingComponent } from './nation/district-ranking-bar.component';\nimport { NationComponent } from './nation/nation.component';\nimport { RegionComponent } from './region/region.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: MapsComponent,\n  children: [\n    {\n      path: 'area/:name',\n      component: RegionComponent,\n    },\n    {\n      path: 'area/:name/:type',\n      component: RegionComponent,\n    },\n    {\n      path: 'nepal',\n      component: NationComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MapsRoutingModule { }\n\nexport const routedComponents = [\n  MapsComponent,\n  NationComponent,\n  RegionComponent,\n  DistrictRankingComponent\n];\n","import { NgModule } from '@angular/core';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport { NbCardModule, NbSpinnerModule } from '@nebular/theme';\nimport { ChartModule } from 'angular2-chartjs';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { LeafletFullscreenModule } from '../../@core/leaflet/leaflet-fullscreen/public-api';\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { MapsRoutingModule, routedComponents } from './maps-routing.module';\n\n\n@NgModule({\n  imports: [\n    ThemeModule,\n    LeafletModule,\n    LeafletFullscreenModule,\n    MapsRoutingModule,\n    NgxEchartsModule,\n    NbCardModule,\n    NbSpinnerModule,\n    ChartModule\n  ],\n  exports: [],\n  declarations: [\n    ...routedComponents,\n  ],\n})\nexport class MapsModule { }\n","(function () {\n\nL.Control.FullScreen = L.Control.extend({\n\toptions: {\n\t\tposition: 'topleft',\n\t\ttitle: 'Full Screen',\n\t\ttitleCancel: 'Exit Full Screen',\n\t\tforceSeparateButton: false,\n\t\tforcePseudoFullscreen: false,\n\t\tfullscreenElement: false\n\t},\n\t\n\tonAdd: function (map) {\n\t\tvar className = 'leaflet-control-zoom-fullscreen', container, content = '';\n\t\t\n\t\tif (map.zoomControl && !this.options.forceSeparateButton) {\n\t\t\tcontainer = map.zoomControl._container;\n\t\t} else {\n\t\t\tcontainer = L.DomUtil.create('div', 'leaflet-bar');\n\t\t}\n\t\t\n\t\tif (this.options.content) {\n\t\t\tcontent = this.options.content;\n\t\t} else {\n\t\t\tclassName += ' fullscreen-icon';\n\t\t}\n\n\t\tthis._createButton(this.options.title, className, content, container, this.toggleFullScreen, this);\n\t\tthis._map.fullscreenControl = this;\n\n\t\tthis._map.on('enterFullscreen exitFullscreen', this._toggleTitle, this);\n\n\t\treturn container;\n\t},\n\t\n\tonRemove: function (map) {\n\t\tL.DomEvent\n\t\t\t.off(this.link, 'click', L.DomEvent.stopPropagation)\n\t\t\t.off(this.link, 'click', L.DomEvent.preventDefault)\n\t\t\t.off(this.link, 'click', this.toggleFullScreen, this);\n\t\t\n\t\tL.DomEvent\n\t\t\t.off(this._container, fullScreenApi.fullScreenEventName, L.DomEvent.stopPropagation)\n\t\t\t.off(this._container, fullScreenApi.fullScreenEventName, L.DomEvent.preventDefault)\n\t\t\t.off(this._container, fullScreenApi.fullScreenEventName, this._handleFullscreenChange, this);\n\t\t\n\t\tL.DomEvent\n\t\t\t.off(document, fullScreenApi.fullScreenEventName, L.DomEvent.stopPropagation)\n\t\t\t.off(document, fullScreenApi.fullScreenEventName, L.DomEvent.preventDefault)\n\t\t\t.off(document, fullScreenApi.fullScreenEventName, this._handleFullscreenChange, this);\n\t},\n\t\n\t_createButton: function (title, className, content, container, fn, context) {\n\t\tthis.link = L.DomUtil.create('a', className, container);\n\t\tthis.link.href = '#';\n\t\tthis.link.title = title;\n\t\tthis.link.innerHTML = content;\n\n\t\tthis.link.setAttribute('role', 'button');\n\t\tthis.link.setAttribute('aria-label', title);\n\n\t\tL.DomEvent\n\t\t\t.on(this.link, 'click', L.DomEvent.stopPropagation)\n\t\t\t.on(this.link, 'click', L.DomEvent.preventDefault)\n\t\t\t.on(this.link, 'click', fn, context);\n\t\t\n\t\tL.DomEvent\n\t\t\t.on(container, fullScreenApi.fullScreenEventName, L.DomEvent.stopPropagation)\n\t\t\t.on(container, fullScreenApi.fullScreenEventName, L.DomEvent.preventDefault)\n\t\t\t.on(container, fullScreenApi.fullScreenEventName, this._handleFullscreenChange, context);\n\t\t\n\t\tL.DomEvent\n\t\t\t.on(document, fullScreenApi.fullScreenEventName, L.DomEvent.stopPropagation)\n\t\t\t.on(document, fullScreenApi.fullScreenEventName, L.DomEvent.preventDefault)\n\t\t\t.on(document, fullScreenApi.fullScreenEventName, this._handleFullscreenChange, context);\n\n\t\treturn this.link;\n\t},\n\t\n\ttoggleFullScreen: function () {\n\t\tvar map = this._map;\n\t\tmap._exitFired = false;\n\t\tif (map._isFullscreen) {\n\t\t\tif (fullScreenApi.supportsFullScreen && !this.options.forcePseudoFullscreen) {\n\t\t\t\tfullScreenApi.cancelFullScreen();\n\t\t\t} else {\n\t\t\t\tL.DomUtil.removeClass(this.options.fullscreenElement ? this.options.fullscreenElement : map._container, 'leaflet-pseudo-fullscreen');\n\t\t\t}\n\t\t\tmap.fire('exitFullscreen');\n\t\t\tmap._exitFired = true;\n\t\t\tmap._isFullscreen = false;\n\t\t}\n\t\telse {\n\t\t\tif (fullScreenApi.supportsFullScreen && !this.options.forcePseudoFullscreen) {\n\t\t\t\tfullScreenApi.requestFullScreen(this.options.fullscreenElement ? this.options.fullscreenElement : map._container);\n\t\t\t} else {\n\t\t\t\tL.DomUtil.addClass(this.options.fullscreenElement ? this.options.fullscreenElement : map._container, 'leaflet-pseudo-fullscreen');\n\t\t\t}\n\t\t\tmap.fire('enterFullscreen');\n\t\t\tmap._isFullscreen = true;\n\t\t}\n\t},\n\t\n\t_toggleTitle: function () {\n\t\tthis.link.title = this._map._isFullscreen ? this.options.title : this.options.titleCancel;\n\t},\n\t\n\t_handleFullscreenChange: function () {\n\t\tvar map = this._map;\n\t\tmap.invalidateSize();\n\t\tif (!fullScreenApi.isFullScreen() && !map._exitFired) {\n\t\t\tmap.fire('exitFullscreen');\n\t\t\tmap._exitFired = true;\n\t\t\tmap._isFullscreen = false;\n\t\t}\n\t}\n});\n\nL.Map.include({\n\ttoggleFullscreen: function () {\n\t\tthis.fullscreenControl.toggleFullScreen();\n\t}\n});\n\nL.Map.addInitHook(function () {\n\tif (this.options.fullscreenControl) {\n\t\tthis.addControl(L.control.fullscreen(this.options.fullscreenControlOptions));\n\t}\n});\n\nL.control.fullscreen = function (options) {\n\treturn new L.Control.FullScreen(options);\n};\n\n/* \nNative FullScreen JavaScript API\n-------------\nAssumes Mozilla naming conventions instead of W3C for now\n\nsource : http://johndyer.name/native-fullscreen-javascript-api-plus-jquery-plugin/\n\n*/\n\n\tvar \n\t\tfullScreenApi = { \n\t\t\tsupportsFullScreen: false,\n\t\t\tisFullScreen: function () { return false; }, \n\t\t\trequestFullScreen: function () {}, \n\t\t\tcancelFullScreen: function () {},\n\t\t\tfullScreenEventName: '',\n\t\t\tprefix: ''\n\t\t},\n\t\tbrowserPrefixes = 'webkit moz o ms khtml'.split(' ');\n\t\n\t// check for native support\n\tif (typeof document.exitFullscreen !== 'undefined') {\n\t\tfullScreenApi.supportsFullScreen = true;\n\t} else {\n\t\t// check for fullscreen support by vendor prefix\n\t\tfor (var i = 0, il = browserPrefixes.length; i < il; i++) {\n\t\t\tfullScreenApi.prefix = browserPrefixes[i];\n\t\t\tif (typeof document[fullScreenApi.prefix + 'CancelFullScreen'] !== 'undefined') {\n\t\t\t\tfullScreenApi.supportsFullScreen = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (typeof document['msExitFullscreen'] !== 'undefined') {\n\t\t\tfullScreenApi.prefix = 'ms';\n\t\t\tfullScreenApi.supportsFullScreen = true;\n\t\t}\n\t}\n\t\n\t// update methods to do something useful\n\tif (fullScreenApi.supportsFullScreen) {\n\t\tif (fullScreenApi.prefix === 'ms') {\n\t\t\tfullScreenApi.fullScreenEventName = 'MSFullscreenChange';\n\t\t} else {\n\t\t\tfullScreenApi.fullScreenEventName = fullScreenApi.prefix + 'fullscreenchange';\n\t\t}\n\t\tfullScreenApi.isFullScreen = function () {\n\t\t\tswitch (this.prefix) {\n\t\t\t\tcase '':\n\t\t\t\t\treturn document.fullscreen;\n\t\t\t\tcase 'webkit':\n\t\t\t\t\treturn document.webkitIsFullScreen;\n\t\t\t\tcase 'ms':\n\t\t\t\t\treturn document.msFullscreenElement;\n\t\t\t\tdefault:\n\t\t\t\t\treturn document[this.prefix + 'FullScreen'];\n\t\t\t}\n\t\t};\n\t\tfullScreenApi.requestFullScreen = function (el) {\n\t\t\tswitch (this.prefix) {\n\t\t\t\tcase '':\n\t\t\t\t\treturn el.requestFullscreen();\n\t\t\t\tcase 'ms':\n\t\t\t\t\treturn el.msRequestFullscreen();\n\t\t\t\tdefault:\n\t\t\t\t\treturn el[this.prefix + 'RequestFullScreen']();\n\t\t\t}\n\t\t};\n\t\tfullScreenApi.cancelFullScreen = function () {\n\t\t\tswitch (this.prefix) {\n\t\t\t\tcase '':\n\t\t\t\t\treturn document.exitFullscreen();\n\t\t\t\tcase 'ms':\n\t\t\t\t\treturn document.msExitFullscreen();\n\t\t\t\tdefault:\n\t\t\t\t\treturn document[this.prefix + 'CancelFullScreen']();\n\t\t\t}\n\t\t};\n\t}\n\n\t// jQuery plugin\n\tif (typeof jQuery !== 'undefined') {\n\t\tjQuery.fn.requestFullScreen = function () {\n\t\t\treturn this.each(function () {\n\t\t\t\tvar el = jQuery(this);\n\t\t\t\tif (fullScreenApi.supportsFullScreen) {\n\t\t\t\t\tfullScreenApi.requestFullScreen(el);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t}\n\n\t// export api\n\twindow.fullScreenApi = fullScreenApi;\n})();\n"]}