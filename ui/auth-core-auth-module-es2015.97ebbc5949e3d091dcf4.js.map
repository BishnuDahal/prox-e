{"version":3,"sources":["webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/core/auth-routing.module.ts","webpack:///src/app/auth/core/auth.module.ts"],"names":["LoginComponent","login","routes","path","component","children","AuthRoutingModule","forChild","AuthModule","N"],"mappings":"uMAKI,yCAAuD,yBAAW,+B,yBAAX,iE,yBAH3D,+CACE,wCAAuB,qCAAG,oCAAQ,8BAAI,8BACtC,yCACE,2CACF,8BACF,+B,4CAFQ,2E,yBAOJ,yCAA2D,yBAAa,+B,yBAAb,iE,yBAH/D,+CACE,wCAAuB,qCAAG,mCAAO,8BAAI,8BACrC,yCACE,2CACF,8BACF,+B,4CAFQ,6E,sBAqBF,wCACE,gDACF,+B,sBACA,wCACE,2DACF,+B,yBANF,0CACE,0CAGA,0CAGF,wC,2EANmC,oGAGA,oG,sBAsBjC,wCACE,mDACF,+B,yBACA,wCACE,yBAIF,+B,6CAJE,wO,yBALJ,0CACE,0CAGA,0CAMF,wC,2EATmC,oGAGA,kJ,yBA0BjC,wCAIuC,yBAAsB,+B,sDAA1D,+CAHA,+CACA,8CAAiC,gBAEG,uE,yBACvC,qCAIuC,yBAAsB,+B,sDAA1D,+CAHA,sEAA4B,kBAA5B,CAA4B,gBAGQ,uE,yBAVzC,0CACE,0CAKA,0CAKF,wC,yBAVK,qEAKA,qE,yBATT,8CACE,8CACA,0CACE,qDAYF,8BACF,+B,4CAbkB,gFC9EX,Y,MAAMA,UAAuB,K,2CAAvBA,I,mDAAAA,EAAc,4/C,GAAA,MDR3B,wCAA6B,mCAAO,8BAEpC,gDAOA,gDAOA,4CAAM,wDAAY,EAAAC,WAEhB,yCACE,2CAAuC,0CAAc,8BACrD,6CAEO,gFAFP,8BAYA,qDAQF,8BAEA,0CACE,6CAA0C,sCAAS,8BACnD,gDAEO,mFAFP,8BAaA,qDAWF,8BAEA,2CACE,yCAA4D,6CAAgB,8BAC9E,8BAEA,8CAKE,sCACF,8BACF,8BAEA,iDAkBA,+CACE,qDAAuB,yCAA8C,oCAAO,8BAC9E,+B,6GArGU,wIAOA,8IAaC,8EAAwB,sDAAxB,CAAwB,gEASxB,2EACO,mFAcP,iFAA2B,sDAA3B,CAA2B,kEAA3B,CAA2B,oEAA3B,CAA2B,qEAU3B,2EACO,mFAqBR,gFADA,4DAMD,sG,wfC3EF,G,6CAAM,GCFPC,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAW,IACXC,SAAU,CACR,CACEF,KAAM,UACNC,UAAW,GAEb,CACED,KAAM,WACNC,UAAW,KAEb,CACED,KAAM,UACNC,UAAW,KAEb,CACED,KAAM,mBACNC,UAAW,KAEb,CACED,KAAM,iBACNC,UAAW,QAUZ,Y,MAAME,G,yDAAAA,I,+EAAAA,IAAiB,SAHnB,CAAC,IAAaC,SAASL,IACtB,O,GAEL,GCtCP,2CAsBO,Y,MAAMM,G,yDAAAA,I,+EAAAA,IAAU,SAXZ,CACP,IACA,IACA,IACA,IACA,EAAAC,EACA,IACA,IACA,M,GAGG","file":"x","sourcesContent":["<h1 id=\"title\" class=\"title\">Sign In</h1>\n\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>Oh snap!</b></p>\n  <ul class=\"alert-message-list\">\n    <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\n  </ul>\n</nb-alert>\n\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\n  <p class=\"alert-title\"><b>Hooray!</b></p>\n  <ul class=\"alert-message-list\">\n    <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\n  </ul>\n</nb-alert>\n\n<form (ngSubmit)=\"login()\" #form=\"ngForm\" aria-labelledby=\"title\">\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-email\">Email address:</label>\n    <input nbInput\n           fullWidth\n           [(ngModel)]=\"user.email\"\n           #email=\"ngModel\"\n           name=\"email\"\n           id=\"input-email\"\n           pattern=\".+@.+\\..+\"\n           placeholder=\"Email address\"\n           autofocus\n           [status]=\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\"\n           [required]=\"getConfigValue('forms.validation.email.required')\"\n           [attr.aria-invalid]=\"email.invalid && email.touched ? true : null\">\n    <ng-container *ngIf=\"email.invalid && email.touched\">\n      <p class=\"caption status-danger\" *ngIf=\"email.errors?.required\">\n        Email is required!\n      </p>\n      <p class=\"caption status-danger\" *ngIf=\"email.errors?.pattern\">\n        Email should be the real one!\n      </p>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-password\">Password:</label>\n    <input nbInput\n           fullWidth\n           [(ngModel)]=\"user.password\"\n           #password=\"ngModel\"\n           name=\"password\"\n           type=\"password\"\n           id=\"input-password\"\n           placeholder=\"Password\"\n           [status]=\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\"\n           [required]=\"getConfigValue('forms.validation.password.required')\"\n           [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\n           [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\n           [attr.aria-invalid]=\"password.invalid && password.touched ? true : null\">\n    <ng-container *ngIf=\"password.invalid && password.touched \">\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.required\">\n        Password is required!\n      </p>\n      <p class=\"caption status-danger\" *ngIf=\"(password.errors?.minlength || password.errors?.maxlength)\">\n        Password should contains\n        from {{ getConfigValue('forms.validation.password.minLength') }}\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\n        characters\n      </p>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group accept-group\">\n    <a class=\"forgot-password\" routerLink=\"../request-password\">Forgot Password?</a>\n  </div>\n\n  <button nbButton\n          fullWidth\n          status=\"success\"\n          [disabled]=\"submitted || !form.valid\"\n          [class.btn-pulse]=\"submitted\">\n    Sign In\n  </button>\n</form>\n\n<section *ngIf=\"socialLinks && socialLinks.length > 0\" class=\"links\" aria-label=\"Social sign in\">\n  Or connect with:\n  <div class=\"socials\">\n    <ng-container *ngFor=\"let socialLink of socialLinks\">\n      <a *ngIf=\"socialLink.link\"\n         [routerLink]=\"socialLink.link\"\n         [attr.target]=\"socialLink.target\"\n         [attr.class]=\"socialLink.icon\"\n         [class.with-icon]=\"socialLink.icon\">{{ socialLink.title }}</a>\n      <a *ngIf=\"socialLink.url\"\n         [attr.href]=\"socialLink.url\"\n         [attr.target]=\"socialLink.target\"\n         [attr.class]=\"socialLink.icon\"\n         [class.with-icon]=\"socialLink.icon\">{{ socialLink.title }}</a>\n    </ng-container>\n  </div>\n</section>\n\n<section class=\"another-action\" aria-label=\"Register\">\n  Don't have an account? <a class=\"text-link\" routerLink=\"../register\">Sign Up</a>\n</section>\n","import { Component } from '@angular/core';\nimport { NbLoginComponent } from '@nebular/auth';\n\n@Component({\n  selector: 'ngx-login',\n  styleUrls: ['./login.component.scss'],\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent extends NbLoginComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NbAuthComponent, NbRegisterComponent, NbResetPasswordComponent, NbRequestPasswordComponent } from '@nebular/auth';\nimport { LoginComponent } from '../login/login.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NbAuthComponent,\n    children: [\n      {\n        path: 'sign-in',\n        component: LoginComponent,\n      },\n      {\n        path: 'register',\n        component: NbRegisterComponent\n      },\n      {\n        path: 'sign-up',\n        component: NbRegisterComponent\n      },\n      {\n        path: 'request-password',\n        component: NbRequestPasswordComponent\n      },\n      {\n        path: 'reset-password',\n        component: NbResetPasswordComponent\n      }\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule as AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from '../login/login.component';\nimport { NbCheckboxModule, NbButtonModule, NbInputModule, NbAlertModule } from '@nebular/theme';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    NbAlertModule,\n    NbInputModule,\n    NbButtonModule,\n    NbCheckboxModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n"]}