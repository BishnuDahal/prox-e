{"version":3,"sources":["webpack:///src/app/pages/charts/charts.component.ts","webpack:///src/app/pages/charts/echarts/echarts-pie.component.ts","webpack:///src/app/pages/charts/echarts/echarts-bar.component.ts","webpack:///src/app/pages/charts/echarts/echarts-line.component.ts","webpack:///src/app/pages/charts/echarts/echarts-multiple-xaxis.component.ts","webpack:///src/app/pages/charts/echarts/echarts-area-stack.component.ts","webpack:///src/app/pages/charts/echarts/echarts-bar-animation.component.ts","webpack:///src/app/pages/charts/echarts/echarts-radar.component.ts","webpack:///src/app/pages/charts/echarts/echarts.component.ts","webpack:///src/app/pages/charts/echarts/echarts.component.html","webpack:///src/app/pages/charts/d3/d3-pie.component.ts","webpack:///src/app/pages/charts/d3/d3-bar.component.ts","webpack:///src/app/pages/charts/d3/d3-line.component.ts","webpack:///src/app/pages/charts/d3/d3-advanced-pie.component.ts","webpack:///src/app/pages/charts/d3/d3-area-stack.component.ts","webpack:///src/app/pages/charts/d3/d3.component.ts","webpack:///src/app/pages/charts/d3/d3.component.html","webpack:///src/app/pages/charts/chartjs/chartjs-pie.component.ts","webpack:///src/app/pages/charts/chartjs/chartjs-bar.component.ts","webpack:///src/app/pages/charts/chartjs/chartjs-line.component.ts","webpack:///src/app/pages/charts/chartjs/chartjs-multiple-xaxis.component.ts","webpack:///src/app/pages/charts/chartjs/chartjs-bar-horizontal.component.ts","webpack:///src/app/pages/charts/chartjs/chartjs-radar.component.ts","webpack:///src/app/pages/charts/charts-routing.module.ts","webpack:///src/app/pages/charts/chartjs/chartjs.component.ts","webpack:///src/app/pages/charts/chartjs/chartjs.component.html","webpack:///src/app/pages/charts/charts.module.ts"],"names":["ChartsComponent","EchartsPieComponent","theme","options","this","themeSubscription","getJsTheme","subscribe","config","colors","variables","echarts","backgroundColor","bg","color","warningLight","infoLight","dangerLight","successLight","primaryLight","tooltip","trigger","formatter","legend","orient","left","data","textStyle","textColor","series","name","type","radius","center","value","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","itemHoverShadowColor","label","normal","labelLine","lineStyle","axisLineColor","unsubscribe","EchartsBarComponent","axisPointer","grid","right","bottom","containLabel","xAxis","axisTick","alignWithLabel","axisLine","axisLabel","yAxis","splitLine","splitLineColor","barWidth","EchartsLineComponent","danger","primary","info","EchartsMultipleXaxisComponent","success","top","onZero","params","seriesData","length","xAxisIndex","smooth","EchartsAreaStackComponent","tooltipBackgroundColor","boundaryGap","stack","areaStyle","opacity","areaOpacity","show","position","EchartsBarAnimationComponent","xAxisData","data1","data2","align","silent","animationDelay","idx","animationEasing","animationDelayUpdate","Array","keys","forEach","_","i","push","Math","sin","cos","EchartsRadarComponent","warning","radar","indicator","max","splitArea","EchartsComponent","D3PieComponent","results","showLegend","showLabels","colorScheme","domain","D3BarComponent","showXAxis","showYAxis","xAxisLabel","yAxisLabel","D3LineComponent","multi","showXAxisLabel","showYAxisLabel","D3AdvancedPieComponent","single","D3AreaStackComponent","autoScale","D3Component","ChartjsPieComponent","chartjs","labels","datasets","maintainAspectRatio","responsive","scales","xAxes","display","yAxes","fontColor","ChartjsBarComponent","hexToRgbA","gridLines","ticks","ChartjsLineComponent","borderColor","ChartjsMultipleXaxisComponent","random","fill","borderDash","pointRadius","pointHoverRadius","hover","mode","scaleLabel","labelString","round","ChartjsBarHorizontalComponent","borderWidth","elements","rectangle","ChartjsRadarComponent","scaleFontColor","scale","pointLabels","fontSize","angleLines","routes","path","component","children","ChartjsComponent","ChartsRoutingModule","forChild","ChartsModule","ChartModule"],"mappings":"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","file":"x","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-charts',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class ChartsComponent {\n}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-pie',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsPieComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts?.bg,\n        color: [\n          colors?.warningLight,\n          colors?.infoLight,\n          colors?.dangerLight,\n          colors?.successLight,\n          colors?.primaryLight\n        ],\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)',\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: ['USA', 'Germany', 'France', 'Canada', 'Russia'],\n          textStyle: {\n            color: echarts.textColor,\n          },\n        },\n        series: [\n          {\n            name: 'Countries',\n            type: 'pie',\n            radius: '80%',\n            center: ['50%', '50%'],\n            data: [\n              { value: 335, name: 'Germany' },\n              { value: 310, name: 'France' },\n              { value: 234, name: 'Canada' },\n              { value: 135, name: 'Russia' },\n              { value: 1548, name: 'USA' },\n            ],\n            itemStyle: {\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: echarts.itemHoverShadowColor,\n              },\n            },\n            label: {\n              normal: {\n                textStyle: {\n                  color: echarts.textColor,\n                },\n              },\n            },\n            labelLine: {\n              normal: {\n                lineStyle: {\n                  color: echarts.axisLineColor,\n                },\n              },\n            },\n          },\n        ],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-bar',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsBarComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n\n      const colors: any = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts.bg,\n        color: [colors.primaryLight],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow',\n          },\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true,\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            splitLine: {\n              lineStyle: {\n                color: echarts.splitLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        series: [\n          {\n            name: 'Score',\n            type: 'bar',\n            barWidth: '60%',\n            data: [10, 52, 200, 334, 390, 330, 220],\n          },\n        ],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-line',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsLineComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts.bg,\n        color: [colors.danger, colors.primary, colors.info],\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c}',\n        },\n        legend: {\n          left: 'left',\n          data: ['Line 1', 'Line 2', 'Line 3'],\n          textStyle: {\n            color: echarts.textColor,\n          },\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        yAxis: [\n          {\n            type: 'log',\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            splitLine: {\n              lineStyle: {\n                color: echarts.splitLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true,\n        },\n        series: [\n          {\n            name: 'Line 1',\n            type: 'line',\n            data: [1, 3, 9, 27, 81, 247, 741, 2223, 6669],\n          },\n          {\n            name: 'Line 2',\n            type: 'line',\n            data: [1, 2, 4, 8, 16, 32, 64, 128, 256],\n          },\n          {\n            name: 'Line 3',\n            type: 'line',\n            data: [1 / 2, 1 / 4, 1 / 8, 1 / 16, 1 / 32, 1 / 64, 1 / 128, 1 / 256, 1 / 512],\n          },\n        ],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, AfterViewInit, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-multiple-xaxis',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsMultipleXaxisComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts.bg,\n        color: [colors.success, colors.info],\n        tooltip: {\n          trigger: 'none',\n          axisPointer: {\n            type: 'cross',\n          },\n        },\n        legend: {\n          data: ['2015 Precipitation', '2016 Precipitation'],\n          textStyle: {\n            color: echarts.textColor,\n          },\n        },\n        grid: {\n          top: 70,\n          bottom: 50,\n        },\n        xAxis: [\n          {\n            type: 'category',\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              onZero: false,\n              lineStyle: {\n                color: colors.info,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n            axisPointer: {\n              label: {\n                formatter: (params: any) => {\n                  return (\n                    'Precipitation  ' + params.value + (params.seriesData.length ? '：' + params.seriesData[0].data : '')\n                  );\n                },\n              },\n            },\n            data: [\n              '2016-1',\n              '2016-2',\n              '2016-3',\n              '2016-4',\n              '2016-5',\n              '2016-6',\n              '2016-7',\n              '2016-8',\n              '2016-9',\n              '2016-10',\n              '2016-11',\n              '2016-12',\n            ],\n          },\n          {\n            type: 'category',\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              onZero: false,\n              lineStyle: {\n                color: colors.success,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n            axisPointer: {\n              label: {\n                formatter: (params: any) => {\n                  return (\n                    'Precipitation  ' + params.value + (params.seriesData.length ? '：' + params.seriesData[0].data : '')\n                  );\n                },\n              },\n            },\n            data: [\n              '2015-1',\n              '2015-2',\n              '2015-3',\n              '2015-4',\n              '2015-5',\n              '2015-6',\n              '2015-7',\n              '2015-8',\n              '2015-9',\n              '2015-10',\n              '2015-11',\n              '2015-12',\n            ],\n          },\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            splitLine: {\n              lineStyle: {\n                color: echarts.splitLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        series: [\n          {\n            name: '2015 Precipitation',\n            type: 'line',\n            xAxisIndex: 1,\n            smooth: true,\n            data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3],\n          },\n          {\n            name: '2016 Precipitation',\n            type: 'line',\n            smooth: true,\n            data: [3.9, 5.9, 11.1, 18.7, 48.3, 69.2, 231.6, 46.6, 55.4, 18.4, 10.3, 0.7],\n          },\n        ],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-area-stack',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsAreaStackComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts.bg,\n        color: [colors.warningLight, colors.infoLight, colors.dangerLight, colors.successLight, colors.primaryLight],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: echarts.tooltipBackgroundColor,\n            },\n          },\n        },\n        legend: {\n          data: ['Mail marketing', 'Affiliate advertising', 'Video ad', 'Direct interview', 'Search engine'],\n          textStyle: {\n            color: echarts.textColor,\n          },\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true,\n        },\n        xAxis: [\n          {\n            type: 'category',\n            boundaryGap: false,\n            data: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            splitLine: {\n              lineStyle: {\n                color: echarts.splitLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        series: [\n          {\n            name: 'Mail marketing',\n            type: 'line',\n            stack: 'Total amount',\n            areaStyle: { normal: { opacity: echarts.areaOpacity } },\n            data: [120, 132, 101, 134, 90, 230, 210],\n          },\n          {\n            name: 'Affiliate advertising',\n            type: 'line',\n            stack: 'Total amount',\n            areaStyle: { normal: { opacity: echarts.areaOpacity } },\n            data: [220, 182, 191, 234, 290, 330, 310],\n          },\n          {\n            name: 'Video ad',\n            type: 'line',\n            stack: 'Total amount',\n            areaStyle: { normal: { opacity: echarts.areaOpacity } },\n            data: [150, 232, 201, 154, 190, 330, 410],\n          },\n          {\n            name: 'Direct interview',\n            type: 'line',\n            stack: 'Total amount',\n            areaStyle: { normal: { opacity: echarts.areaOpacity } },\n            data: [320, 332, 301, 334, 390, 330, 320],\n          },\n          {\n            name: 'Search engine',\n            type: 'line',\n            stack: 'Total amount',\n            label: {\n              normal: {\n                show: true,\n                position: 'top',\n                textStyle: {\n                  color: echarts.textColor,\n                },\n              },\n            },\n            areaStyle: { normal: { opacity: echarts.areaOpacity } },\n            data: [820, 932, 901, 934, 1290, 1330, 1320],\n          },\n        ],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-bar-animation',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsBarAnimationComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n      const xAxisData: string[] = [];\n      const data1: number[] = [];\n      const data2: number[] = [];\n\n      const colors: any = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts?.bg,\n        color: [colors?.primaryLight, colors?.infoLight],\n        legend: {\n          data: ['bar', 'bar2'],\n          align: 'left',\n          textStyle: {\n            color: echarts?.textColor,\n          },\n        },\n        xAxis: [\n          {\n            data: xAxisData,\n            silent: false,\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              lineStyle: {\n                color: echarts?.axisLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts?.textColor,\n              },\n            },\n          },\n        ],\n        yAxis: [\n          {\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            splitLine: {\n              lineStyle: {\n                color: echarts.splitLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        series: [\n          {\n            name: 'bar',\n            type: 'bar',\n            data: data1,\n            animationDelay: (idx: any) => idx * 10,\n          },\n          {\n            name: 'bar2',\n            type: 'bar',\n            data: data2,\n            animationDelay: (idx: any) => idx * 10 + 100,\n          },\n        ],\n        animationEasing: 'elasticOut',\n        animationDelayUpdate: (idx: any) => idx * 5,\n      };\n\n      [...Array(100).keys()].forEach((_, i) => {\n        xAxisData.push('Category ' + i);\n        data1.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\n        data2.push((Math.cos(i / 5) * (i / 5 - 10) + i / 6) * 5);\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-echarts-radar',\n  template: `\n    <div echarts [options]=\"options\" class=\"echart\"></div>\n  `,\n})\nexport class EchartsRadarComponent implements AfterViewInit, OnDestroy {\n  options: any = {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n  }\n\n  ngAfterViewInit() {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const echarts: any = config?.variables?.echarts;\n\n      this.options = {\n        backgroundColor: echarts.bg,\n        color: [colors.danger, colors.warning],\n        tooltip: {},\n        legend: {\n          data: ['Allocated Budget', 'Actual Spending'],\n          textStyle: {\n            color: echarts.textColor,\n          },\n        },\n        radar: {\n          name: {\n            textStyle: {\n              color: echarts.textColor,\n            },\n          },\n          indicator: [\n            { name: 'Sales', max: 6500 },\n            { name: 'Administration', max: 16000 },\n            { name: 'Information Techology', max: 30000 },\n            { name: 'Customer Support', max: 38000 },\n            { name: 'Development', max: 52000 },\n            { name: 'Marketing', max: 25000 },\n          ],\n          splitArea: {\n            areaStyle: {\n              color: 'transparent',\n            },\n          },\n        },\n        series: [\n          {\n            name: 'Budget vs Spending',\n            type: 'radar',\n            data: [\n              {\n                value: [4300, 10000, 28000, 35000, 50000, 19000],\n                name: 'Allocated Budget',\n              },\n              {\n                value: [5000, 14000, 28000, 31000, 42000, 21000],\n                name: 'Actual Spending',\n              },\n            ],\n          },\n        ],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-echarts',\n  styleUrls: ['./echarts.component.scss'],\n  templateUrl: './echarts.component.html',\n})\nexport class EchartsComponent {}\n","<div class=\"row\">\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Pie</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-pie></ngx-echarts-pie>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Bar</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-bar></ngx-echarts-bar>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Line</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-line></ngx-echarts-line>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Multiple x-axis</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-multiple-xaxis></ngx-echarts-multiple-xaxis>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Area Stack</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-area-stack></ngx-echarts-area-stack>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Bar Animation</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-bar-animation></ngx-echarts-bar-animation>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Radar</nb-card-header>\n      <nb-card-body>\n        <ngx-echarts-radar></ngx-echarts-radar>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-d3-pie',\n  template: `\n    <ngx-charts-pie-chart\n      [scheme]=\"colorScheme\"\n      [results]=\"results\"\n      [legend]=\"showLegend\"\n      [labels]=\"showLabels\">\n    </ngx-charts-pie-chart>\n  `,\n})\nexport class D3PieComponent implements OnDestroy {\n  results = [\n    { name: 'Germany', value: 8940 },\n    { name: 'USA', value: 5000 },\n    { name: 'France', value: 7200 },\n  ];\n  showLegend = true;\n  showLabels = true;\n  colorScheme: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n      const colors: any = config.variables;\n      this.colorScheme = {\n        domain: [colors.primaryLight, colors.infoLight, colors.successLight, colors.warningLight, colors.dangerLight],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-d3-bar',\n  template: `\n    <ngx-charts-bar-vertical\n      [scheme]=\"colorScheme\"\n      [results]=\"results\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [legend]=\"showLegend\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\">\n    </ngx-charts-bar-vertical>\n  `,\n})\nexport class D3BarComponent implements OnDestroy {\n\n  results = [\n    { name: 'Germany', value: 8940 },\n    { name: 'USA', value: 5000 },\n    { name: 'France', value: 7200 },\n  ];\n  showLegend = true;\n  showXAxis = true;\n  showYAxis = true;\n  xAxisLabel = 'Country';\n  yAxisLabel = 'Population';\n  colorScheme: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n      const colors: any = config.variables;\n      this.colorScheme = {\n        domain: [colors.primaryLight, colors.infoLight, colors.successLight, colors.warningLight, colors.dangerLight],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-d3-line',\n  template: `\n    <ngx-charts-line-chart\n      [scheme]=\"colorScheme\"\n      [results]=\"multi\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [legend]=\"showLegend\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\">\n    </ngx-charts-line-chart>\n  `,\n})\nexport class D3LineComponent implements OnDestroy {\n  multi = [\n    {\n      name: 'Germany',\n      series: [\n        {\n          name: '2010',\n          value: 7300,\n        },\n        {\n          name: '2011',\n          value: 8940,\n        },\n      ],\n    },\n    {\n      name: 'USA',\n      series: [\n        {\n          name: '2010',\n          value: 7870,\n        },\n        {\n          name: '2011',\n          value: 8270,\n        },\n      ],\n    },\n    {\n      name: 'France',\n      series: [\n        {\n          name: '2010',\n          value: 5002,\n        },\n        {\n          name: '2011',\n          value: 5800,\n        },\n      ],\n    },\n  ];\n  showLegend = true;\n  showXAxis = true;\n  showYAxis = true;\n  showXAxisLabel = true;\n  xAxisLabel = 'Country';\n  showYAxisLabel = true;\n  yAxisLabel = 'Population';\n  colorScheme: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n      const colors: any = config.variables;\n      this.colorScheme = {\n        domain: [colors.primaryLight, colors.infoLight, colors.successLight, colors.warningLight, colors.dangerLight],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-d3-advanced-pie',\n  template: `\n    <ngx-charts-advanced-pie-chart\n      [scheme]=\"colorScheme\"\n      [results]=\"single\">\n    </ngx-charts-advanced-pie-chart>\n  `,\n})\nexport class D3AdvancedPieComponent implements OnDestroy {\n  single = [\n    {\n      name: 'Germany',\n      value: 8940000,\n    },\n    {\n      name: 'USA',\n      value: 5000000,\n    },\n    {\n      name: 'France',\n      value: 7200000,\n    },\n  ];\n  colorScheme: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n      const colors: any = config.variables;\n      this.colorScheme = {\n        domain: [colors.primaryLight, colors.infoLight, colors.successLight, colors.warningLight, colors.dangerLight],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-d3-area-stack',\n  template: `\n    <ngx-charts-area-chart\n      [scheme]=\"colorScheme\"\n      [results]=\"multi\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [legend]=\"showLegend\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\"\n      [autoScale]=\"autoScale\">\n    </ngx-charts-area-chart>\n  `,\n})\nexport class D3AreaStackComponent implements OnDestroy {\n  multi = [{\n    name: 'Germany',\n    series: [{\n        name: '2010',\n        value: 7300000,\n      }, {\n        name: '2011',\n        value: 8940000,\n      }],\n  }, {\n    name: 'USA',\n    series: [{\n        name: '2010',\n        value: 7870000,\n      }, {\n        name: '2011',\n        value: 8270000,\n      }],\n  }, {\n    name: 'France',\n    series: [{\n        name: '2010',\n        value: 5000002,\n      }, {\n        name: '2011',\n        value: 5800000,\n      }],\n  }];\n  showLegend = true;\n  autoScale = true;\n  showXAxis = true;\n  showYAxis = true;\n  showXAxisLabel = true;\n  showYAxisLabel = true;\n  xAxisLabel = 'Country';\n  yAxisLabel = 'Population';\n  colorScheme: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n      const colors: any = config.variables;\n      this.colorScheme = {\n        domain: [colors.primaryLight, colors.infoLight, colors.successLight, colors.warningLight, colors.dangerLight],\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-d3',\n  styleUrls: ['./d3.component.scss'],\n  templateUrl: './d3.component.html',\n})\nexport class D3Component {}\n","<div class=\"row\">\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Pie</nb-card-header>\n      <nb-card-body>\n        <ngx-d3-pie></ngx-d3-pie>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Bar</nb-card-header>\n      <nb-card-body>\n        <ngx-d3-bar></ngx-d3-bar>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Line</nb-card-header>\n      <nb-card-body>\n        <ngx-d3-line></ngx-d3-line>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Advanced Pie</nb-card-header>\n      <nb-card-body>\n        <ngx-d3-advanced-pie></ngx-d3-advanced-pie>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Area Chart</nb-card-header>\n      <nb-card-body>\n        <ngx-d3-area-stack></ngx-d3-area-stack>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-chartjs-pie',\n  template: `\n    <chart type=\"pie\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class ChartjsPieComponent implements OnDestroy {\n  data: any;\n  options: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const chartjs: any = config?.variables?.chartjs;\n\n      this.data = {\n        labels: ['Download Sales', 'In-Store Sales', 'Mail Sales'],\n        datasets: [{\n          data: [300, 500, 100],\n          backgroundColor: [colors?.primaryLight, colors?.infoLight, colors?.successLight],\n        }],\n      };\n\n      this.options = {\n        maintainAspectRatio: false,\n        responsive: true,\n        scales: {\n          xAxes: [\n            {\n              display: false,\n            },\n          ],\n          yAxes: [\n            {\n              display: false,\n            },\n          ],\n        },\n        legend: {\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService, NbColorHelper } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-chartjs-bar',\n  template: `\n    <chart type=\"bar\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class ChartjsBarComponent implements OnDestroy {\n  data: any;\n  options: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const chartjs: any = config?.variables?.chartjs;\n\n      this.data = {\n        labels: ['2006', '2007', '2008', '2009', '2010', '2011', '2012'],\n        datasets: [{\n          data: [65, 59, 80, 81, 56, 55, 40],\n          label: 'Series A',\n          backgroundColor: NbColorHelper.hexToRgbA(colors.primaryLight, 0.8),\n        }, {\n          data: [28, 48, 40, 19, 86, 27, 90],\n          label: 'Series B',\n          backgroundColor: NbColorHelper.hexToRgbA(colors.infoLight, 0.8),\n        }],\n      };\n\n      this.options = {\n        maintainAspectRatio: false,\n        responsive: true,\n        legend: {\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: false,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n        },\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService, NbColorHelper } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-chartjs-line',\n  template: `\n    <chart type=\"line\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class ChartjsLineComponent implements OnDestroy {\n  data: any;\n  options: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const chartjs: any = config?.variables?.chartjs;\n\n      this.data = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [{\n          data: [65, 59, 80, 81, 56, 55, 40],\n          label: 'Series A',\n          backgroundColor: NbColorHelper.hexToRgbA(colors.primary, 0.3),\n          borderColor: colors.primary,\n        }, {\n          data: [28, 48, 40, 19, 86, 27, 90],\n          label: 'Series B',\n          backgroundColor: NbColorHelper.hexToRgbA(colors.danger, 0.3),\n          borderColor: colors.danger,\n        }, {\n          data: [18, 48, 77, 9, 100, 27, 40],\n          label: 'Series C',\n          backgroundColor: NbColorHelper.hexToRgbA(colors.info, 0.3),\n          borderColor: colors.info,\n        },\n        ],\n      };\n\n      this.options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n        },\n        legend: {\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-chartjs-multiple-xaxis',\n  template: `\n    <chart type=\"line\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class ChartjsMultipleXaxisComponent implements OnDestroy {\n  data: {};\n  options: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const chartjs: any = config?.variables?.chartjs;\n\n      this.data = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n        datasets: [{\n          label: 'dataset - big points',\n          data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n          borderColor: colors.primary,\n          backgroundColor: colors.primary,\n          fill: false,\n          borderDash: [5, 5],\n          pointRadius: 8,\n          pointHoverRadius: 10,\n        }, {\n          label: 'dataset - individual point sizes',\n          data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n          borderColor: colors.dangerLight,\n          backgroundColor: colors.dangerLight,\n          fill: false,\n          borderDash: [5, 5],\n          pointRadius: 8,\n          pointHoverRadius: 10,\n        }, {\n          label: 'dataset - large pointHoverRadius',\n          data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n          borderColor: colors.info,\n          backgroundColor: colors.info,\n          fill: false,\n          pointRadius: 8,\n          pointHoverRadius: 10,\n        }, {\n          label: 'dataset - large pointHitRadius',\n          data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n          borderColor: colors.success,\n          backgroundColor: colors.success,\n          fill: false,\n          pointRadius: 8,\n          pointHoverRadius: 10,\n        }],\n      };\n\n      this.options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          position: 'bottom',\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n        hover: {\n          mode: 'index',\n        },\n        scales: {\n          xAxes: [\n            {\n              display: true,\n              scaleLabel: {\n                display: true,\n                labelString: 'Month',\n              },\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              display: true,\n              scaleLabel: {\n                display: true,\n                labelString: 'Value',\n              },\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n        },\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n\n  private random() {\n    return Math.round(Math.random() * 100);\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-chartjs-bar-horizontal',\n  template: `\n    <chart type=\"horizontalBar\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class ChartjsBarHorizontalComponent implements OnDestroy {\n  data: any;\n  options: any;\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const chartjs: any = config?.variables?.chartjs;\n\n      this.data = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n        datasets: [{\n            label: 'Dataset 1',\n            backgroundColor: colors.infoLight,\n            borderWidth: 1,\n            data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n          }, {\n            label: 'Dataset 2',\n            backgroundColor: colors.successLight,\n            data: [this.random(), this.random(), this.random(), this.random(), this.random(), this.random()],\n          },\n        ],\n      };\n\n      this.options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        elements: {\n          rectangle: {\n            borderWidth: 2,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                display: true,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                display: false,\n                color: chartjs.axisLineColor,\n              },\n              ticks: {\n                fontColor: chartjs.textColor,\n              },\n            },\n          ],\n        },\n        legend: {\n          position: 'right',\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n\n  private random() {\n    return Math.round(Math.random() * 100);\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NbThemeService, NbColorHelper } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-chartjs-radar',\n  template: `\n    <chart type=\"radar\" [data]=\"data\" [options]=\"options\"></chart>\n  `,\n})\nexport class ChartjsRadarComponent implements OnDestroy {\n  options: any;\n  data: {};\n  themeSubscription: any;\n\n  constructor(private theme: NbThemeService) {\n    this.themeSubscription = this.theme.getJsTheme().subscribe((config: any) => {\n\n      const colors: any = config?.variables;\n      const chartjs: any = config?.variables?.chartjs;\n\n      this.data = {\n        labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n        datasets: [{\n          data: [65, 59, 90, 81, 56, 55, 40],\n          label: 'Series A',\n          borderColor: colors?.danger,\n          backgroundColor: NbColorHelper.hexToRgbA(colors?.dangerLight, 0.5),\n        }, {\n          data: [28, 48, 40, 19, 96, 27, 100],\n          label: 'Series B',\n          borderColor: colors?.warning,\n          backgroundColor: NbColorHelper.hexToRgbA(colors?.warningLight, 0.5),\n        }],\n      };\n\n      this.options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        scaleFontColor: 'white',\n        legend: {\n          labels: {\n            fontColor: chartjs.textColor,\n          },\n        },\n        scale: {\n          pointLabels: {\n            fontSize: 14,\n            fontColor: chartjs.textColor,\n          },\n          gridLines: {\n            color: chartjs.axisLineColor,\n          },\n          angleLines: {\n            color: chartjs.axisLineColor,\n          },\n        },\n      };\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.themeSubscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChartsComponent } from './charts.component';\nimport { EchartsComponent } from './echarts/echarts.component';\nimport { D3Component } from './d3/d3.component';\nimport { ChartjsComponent } from './chartjs/chartjs.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: ChartsComponent,\n  children: [{\n    path: 'echarts',\n    component: EchartsComponent,\n  }, {\n    path: 'd3',\n    component: D3Component,\n  }, {\n    path: 'chartjs',\n    component: ChartjsComponent,\n  }],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChartsRoutingModule { }\n\nexport const routedComponents = [\n  ChartsComponent,\n  EchartsComponent,\n  D3Component,\n  ChartjsComponent,\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-chartjs',\n  styleUrls: ['./chartjs.component.scss'],\n  templateUrl: './chartjs.component.html',\n})\nexport class ChartjsComponent {}\n","<div class=\"row\">\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Pie</nb-card-header>\n      <nb-card-body>\n        <ngx-chartjs-pie></ngx-chartjs-pie>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Bar</nb-card-header>\n      <nb-card-body>\n        <ngx-chartjs-bar></ngx-chartjs-bar>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Line</nb-card-header>\n      <nb-card-body>\n        <ngx-chartjs-line></ngx-chartjs-line>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Multiple x-axis</nb-card-header>\n      <nb-card-body>\n        <ngx-chartjs-multiple-xaxis></ngx-chartjs-multiple-xaxis>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Bar Horizontal</nb-card-header>\n      <nb-card-body>\n        <ngx-chartjs-bar-horizontal></ngx-chartjs-bar-horizontal>\n      </nb-card-body>\n    </nb-card>\n  </div>\n  <div class=\"col-lg-6\">\n    <nb-card>\n      <nb-card-header>Radar</nb-card-header>\n      <nb-card-body>\n        <ngx-chartjs-radar></ngx-chartjs-radar>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { ChartModule } from 'angular2-chartjs';\nimport { NbCardModule } from '@nebular/theme';\n\nimport { ThemeModule } from '../../@theme/theme.module';\n\nimport { ChartsRoutingModule, routedComponents } from './charts-routing.module';\nimport { ChartjsBarComponent } from './chartjs/chartjs-bar.component';\nimport { ChartjsLineComponent } from './chartjs/chartjs-line.component';\nimport { ChartjsPieComponent } from './chartjs/chartjs-pie.component';\nimport { ChartjsMultipleXaxisComponent } from './chartjs/chartjs-multiple-xaxis.component';\nimport { ChartjsBarHorizontalComponent } from './chartjs/chartjs-bar-horizontal.component';\nimport { ChartjsRadarComponent } from './chartjs/chartjs-radar.component';\nimport { D3BarComponent } from './d3/d3-bar.component';\nimport { D3LineComponent } from './d3/d3-line.component';\nimport { D3PieComponent } from './d3/d3-pie.component';\nimport { D3AreaStackComponent } from './d3/d3-area-stack.component';\nimport { D3PolarComponent } from './d3/d3-polar.component';\nimport { D3AdvancedPieComponent } from './d3/d3-advanced-pie.component';\nimport { EchartsLineComponent } from './echarts/echarts-line.component';\nimport { EchartsPieComponent } from './echarts/echarts-pie.component';\nimport { EchartsBarComponent } from './echarts/echarts-bar.component';\nimport { EchartsMultipleXaxisComponent } from './echarts/echarts-multiple-xaxis.component';\nimport { EchartsAreaStackComponent } from './echarts/echarts-area-stack.component';\nimport { EchartsBarAnimationComponent } from './echarts/echarts-bar-animation.component';\nimport { EchartsRadarComponent } from './echarts/echarts-radar.component';\n\nconst components = [\n  ChartjsBarComponent,\n  ChartjsLineComponent,\n  ChartjsPieComponent,\n  ChartjsMultipleXaxisComponent,\n  ChartjsBarHorizontalComponent,\n  ChartjsRadarComponent,\n  D3BarComponent,\n  D3LineComponent,\n  D3PieComponent,\n  D3AreaStackComponent,\n  D3PolarComponent,\n  D3AdvancedPieComponent,\n  EchartsLineComponent,\n  EchartsPieComponent,\n  EchartsBarComponent,\n  EchartsMultipleXaxisComponent,\n  EchartsAreaStackComponent,\n  EchartsBarAnimationComponent,\n  EchartsRadarComponent,\n];\n\n@NgModule({\n  imports: [\n    ThemeModule,\n    ChartsRoutingModule,\n    NgxEchartsModule,\n    NgxChartsModule,\n    ChartModule,\n    NbCardModule,\n  ],\n  declarations: [...routedComponents, ...components],\n})\nexport class ChartsModule {}\n"]}